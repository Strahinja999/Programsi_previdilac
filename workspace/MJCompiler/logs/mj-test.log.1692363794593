INFO  15:02:58,632 - Compiling source file: D:\Desktop\PP1\Projekat\projekat\workspace\MJCompiler\test\test302.mj
INFO  15:02:58,668 - #2 program
INFO  15:02:58,669 - #18 test302
INFO  15:02:58,669 - #16 const
INFO  15:02:58,669 - #18 int
INFO  15:02:58,669 - #18 jedan
INFO  15:02:58,670 - #12 =
INFO  15:02:58,670 - #17 1
INFO  15:02:58,670 - #5 ;
INFO  15:02:58,670 - #18 int
INFO  15:02:58,671 - #18 i
INFO  15:02:58,671 - #5 ;
INFO  15:02:58,672 - #18 bool
INFO  15:02:58,673 - #18 ibool
INFO  15:02:58,673 - #5 ;
INFO  15:02:58,673 - #18 int
INFO  15:02:58,673 - #18 niz2
INFO  15:02:58,673 - #23 [
INFO  15:02:58,673 - #24 ]
INFO  15:02:58,673 - #5 ;
INFO  15:02:58,674 - #18 int
INFO  15:02:58,674 - #18 niz
INFO  15:02:58,674 - #23 [
INFO  15:02:58,674 - #24 ]
INFO  15:02:58,674 - #5 ;
INFO  15:02:58,675 - #18 int
INFO  15:02:58,675 - #18 a
INFO  15:02:58,675 - #8 ,
INFO  15:02:58,675 - #18 curr
INFO  15:02:58,675 - #5 ;
INFO  15:02:58,675 - #3 {
INFO  15:02:58,675 - #18 int
INFO  15:02:58,676 - #18 sum
INFO  15:02:58,676 - #6 (
INFO  15:02:58,676 - #18 int
INFO  15:02:58,676 - #18 z
INFO  15:02:58,676 - #8 ,
INFO  15:02:58,677 - #18 int
INFO  15:02:58,677 - #18 d
INFO  15:02:58,677 - #7 )
INFO  15:02:58,677 - #3 {
INFO  15:02:58,678 - #10 return
INFO  15:02:58,678 - #18 z
INFO  15:02:58,678 - #11 +
INFO  15:02:58,679 - #18 d
INFO  15:02:58,680 - #5 ;
INFO  15:02:58,680 - #4 }
INFO  15:02:58,680 - #18 int
INFO  15:02:58,681 - #18 inkrement
INFO  15:02:58,681 - #6 (
INFO  15:02:58,681 - #18 int
INFO  15:02:58,681 - #18 a
INFO  15:02:58,681 - #8 ,
INFO  15:02:58,681 - #18 int
INFO  15:02:58,681 - #18 inc
INFO  15:02:58,682 - #7 )
INFO  15:02:58,682 - #18 int
INFO  15:02:58,682 - #18 pom
INFO  15:02:58,682 - #5 ;
INFO  15:02:58,682 - #3 {
INFO  15:02:58,682 - #14 if
INFO  15:02:58,682 - #6 (
INFO  15:02:58,682 - #18 inc
INFO  15:02:58,682 - #38 ==
INFO  15:02:58,682 - #18 jedan
INFO  15:02:58,683 - #7 )
INFO  15:02:58,684 - #18 pom
INFO  15:02:58,684 - #12 =
INFO  15:02:58,684 - #17 1
INFO  15:02:58,684 - #5 ;
INFO  15:02:58,685 - #15 else
INFO  15:02:58,685 - #14 if
INFO  15:02:58,685 - #6 (
INFO  15:02:58,685 - #18 inc
INFO  15:02:58,685 - #38 ==
INFO  15:02:58,685 - #17 2
INFO  15:02:58,685 - #7 )
INFO  15:02:58,685 - #18 pom
INFO  15:02:58,685 - #12 =
INFO  15:02:58,685 - #18 a
INFO  15:02:58,685 - #5 ;
INFO  15:02:58,685 - #10 return
INFO  15:02:58,686 - #18 sum
INFO  15:02:58,686 - #6 (
INFO  15:02:58,686 - #18 a
INFO  15:02:58,686 - #8 ,
INFO  15:02:58,686 - #18 pom
INFO  15:02:58,686 - #7 )
INFO  15:02:58,686 - #5 ;
INFO  15:02:58,686 - #4 }
INFO  15:02:58,686 - #18 bool
INFO  15:02:58,686 - #18 verify
INFO  15:02:58,686 - #6 (
INFO  15:02:58,687 - #7 )
INFO  15:02:58,687 - #3 {
INFO  15:02:58,687 - #9 print
INFO  15:02:58,687 - #6 (
INFO  15:02:58,687 - #19 v
INFO  15:02:58,687 - #7 )
INFO  15:02:58,687 - #5 ;
INFO  15:02:58,688 - #10 return
INFO  15:02:58,689 - #20 false
INFO  15:02:58,689 - #5 ;
INFO  15:02:58,689 - #4 }
INFO  15:02:58,690 - #13 void
INFO  15:02:58,690 - #18 main
INFO  15:02:58,690 - #6 (
INFO  15:02:58,690 - #7 )
INFO  15:02:58,690 - #3 {
INFO  15:02:58,690 - #14 if
INFO  15:02:58,690 - #6 (
INFO  15:02:58,690 - #17 1
INFO  15:02:58,690 - #39 !=
INFO  15:02:58,690 - #17 1
INFO  15:02:58,691 - #7 )
INFO  15:02:58,691 - #9 print
INFO  15:02:58,691 - #6 (
INFO  15:02:58,691 - #36 -
INFO  15:02:58,691 - #17 6
INFO  15:02:58,691 - #7 )
INFO  15:02:58,691 - #5 ;
INFO  15:02:58,691 - #15 else
INFO  15:02:58,691 - #9 print
INFO  15:02:58,691 - #6 (
INFO  15:02:58,691 - #17 0
INFO  15:02:58,691 - #7 )
INFO  15:02:58,691 - #5 ;
INFO  15:02:58,692 - #18 ibool
INFO  15:02:58,692 - #12 =
INFO  15:02:58,692 - #20 false
INFO  15:02:58,692 - #5 ;
INFO  15:02:58,692 - #18 i
INFO  15:02:58,692 - #12 =
INFO  15:02:58,692 - #17 0
INFO  15:02:58,692 - #5 ;
INFO  15:02:58,692 - #25 while
INFO  15:02:58,692 - #6 (
INFO  15:02:58,692 - #18 i
INFO  15:02:58,692 - #42 <
INFO  15:02:58,693 - #17 5
INFO  15:02:58,693 - #7 )
INFO  15:02:58,693 - #3 {
INFO  15:02:58,693 - #14 if
INFO  15:02:58,693 - #6 (
INFO  15:02:58,693 - #18 i
INFO  15:02:58,693 - #38 ==
INFO  15:02:58,693 - #17 2
INFO  15:02:58,694 - #7 )
INFO  15:02:58,694 - #18 ibool
INFO  15:02:58,694 - #12 =
INFO  15:02:58,694 - #20 true
INFO  15:02:58,694 - #5 ;
INFO  15:02:58,694 - #18 i
INFO  15:02:58,694 - #32 ++
INFO  15:02:58,694 - #5 ;
INFO  15:02:58,694 - #4 }
INFO  15:02:58,694 - #14 if
INFO  15:02:58,695 - #6 (
INFO  15:02:58,695 - #18 ibool
INFO  15:02:58,695 - #7 )
INFO  15:02:58,695 - #14 if
INFO  15:02:58,695 - #6 (
INFO  15:02:58,695 - #18 i
INFO  15:02:58,695 - #38 ==
INFO  15:02:58,695 - #17 5
INFO  15:02:58,695 - #7 )
INFO  15:02:58,695 - #9 print
INFO  15:02:58,695 - #6 (
INFO  15:02:58,695 - #17 1
INFO  15:02:58,696 - #7 )
INFO  15:02:58,696 - #5 ;
INFO  15:02:58,696 - #15 else
INFO  15:02:58,696 - #9 print
INFO  15:02:58,696 - #6 (
INFO  15:02:58,696 - #36 -
INFO  15:02:58,696 - #17 1
INFO  15:02:58,696 - #7 )
INFO  15:02:58,696 - #5 ;
INFO  15:02:58,696 - #18 a
INFO  15:02:58,696 - #12 =
INFO  15:02:58,696 - #17 2
INFO  15:02:58,696 - #5 ;
INFO  15:02:58,696 - #18 niz
INFO  15:02:58,696 - #12 =
INFO  15:02:58,696 - #37 new
INFO  15:02:58,696 - #18 int
INFO  15:02:58,696 - #23 [
INFO  15:02:58,696 - #17 3
INFO  15:02:58,696 - #24 ]
INFO  15:02:58,696 - #5 ;
INFO  15:02:58,697 - #18 niz
INFO  15:02:58,697 - #23 [
INFO  15:02:58,697 - #17 0
INFO  15:02:58,697 - #24 ]
INFO  15:02:58,697 - #12 =
INFO  15:02:58,697 - #17 1
INFO  15:02:58,697 - #44 *
INFO  15:02:58,697 - #18 a
INFO  15:02:58,698 - #5 ;
INFO  15:02:58,698 - #18 niz
INFO  15:02:58,698 - #23 [
INFO  15:02:58,698 - #17 1
INFO  15:02:58,698 - #24 ]
INFO  15:02:58,698 - #12 =
INFO  15:02:58,698 - #17 2
INFO  15:02:58,698 - #44 *
INFO  15:02:58,698 - #18 a
INFO  15:02:58,698 - #5 ;
INFO  15:02:58,698 - #18 niz
INFO  15:02:58,698 - #23 [
INFO  15:02:58,698 - #17 2
INFO  15:02:58,698 - #24 ]
INFO  15:02:58,698 - #12 =
INFO  15:02:58,698 - #18 sum
INFO  15:02:58,698 - #6 (
INFO  15:02:58,698 - #18 niz
INFO  15:02:58,698 - #23 [
INFO  15:02:58,698 - #17 1
INFO  15:02:58,698 - #24 ]
INFO  15:02:58,698 - #8 ,
INFO  15:02:58,698 - #18 niz
INFO  15:02:58,699 - #23 [
INFO  15:02:58,699 - #17 0
INFO  15:02:58,699 - #24 ]
INFO  15:02:58,699 - #7 )
INFO  15:02:58,699 - #44 *
INFO  15:02:58,699 - #18 a
INFO  15:02:58,699 - #11 +
INFO  15:02:58,699 - #17 1
INFO  15:02:58,699 - #5 ;
INFO  15:02:58,699 - #14 if
INFO  15:02:58,699 - #6 (
INFO  15:02:58,699 - #18 verify
INFO  15:02:58,699 - #6 (
INFO  15:02:58,699 - #7 )
INFO  15:02:58,699 - #34 ||
INFO  15:02:58,699 - #18 niz
INFO  15:02:58,699 - #23 [
INFO  15:02:58,699 - #17 2
INFO  15:02:58,699 - #24 ]
INFO  15:02:58,699 - #38 ==
INFO  15:02:58,699 - #17 4
INFO  15:02:58,700 - #7 )
INFO  15:02:58,700 - #9 print
INFO  15:02:58,700 - #6 (
INFO  15:02:58,700 - #18 ord
INFO  15:02:58,700 - #6 (
INFO  15:02:58,700 - #19 A
INFO  15:02:58,700 - #7 )
INFO  15:02:58,700 - #7 )
INFO  15:02:58,700 - #5 ;
INFO  15:02:58,700 - #15 else
INFO  15:02:58,700 - #9 print
INFO  15:02:58,700 - #6 (
INFO  15:02:58,700 - #18 ord
INFO  15:02:58,700 - #6 (
INFO  15:02:58,700 - #19 a
INFO  15:02:58,700 - #7 )
INFO  15:02:58,700 - #7 )
INFO  15:02:58,700 - #5 ;
INFO  15:02:58,701 - #9 print
INFO  15:02:58,701 - #6 (
INFO  15:02:58,701 - #18 eol
INFO  15:02:58,701 - #7 )
INFO  15:02:58,701 - #5 ;
INFO  15:02:58,701 - #18 i
INFO  15:02:58,701 - #12 =
INFO  15:02:58,701 - #17 0
INFO  15:02:58,701 - #5 ;
INFO  15:02:58,701 - #25 while
INFO  15:02:58,701 - #6 (
INFO  15:02:58,701 - #18 i
INFO  15:02:58,701 - #42 <
INFO  15:02:58,701 - #17 10
INFO  15:02:58,701 - #7 )
INFO  15:02:58,701 - #3 {
INFO  15:02:58,701 - #14 if
INFO  15:02:58,701 - #6 (
INFO  15:02:58,701 - #18 i
INFO  15:02:58,701 - #38 ==
INFO  15:02:58,701 - #17 3
INFO  15:02:58,701 - #7 )
INFO  15:02:58,701 - #3 {
INFO  15:02:58,701 - #18 i
INFO  15:02:58,701 - #32 ++
INFO  15:02:58,701 - #5 ;
INFO  15:02:58,702 - #27 continue
INFO  15:02:58,702 - #5 ;
INFO  15:02:58,702 - #4 }
INFO  15:02:58,702 - #14 if
INFO  15:02:58,702 - #6 (
INFO  15:02:58,702 - #18 i
INFO  15:02:58,702 - #38 ==
INFO  15:02:58,702 - #17 4
INFO  15:02:58,702 - #7 )
INFO  15:02:58,702 - #26 break
INFO  15:02:58,702 - #5 ;
INFO  15:02:58,702 - #18 i
INFO  15:02:58,703 - #12 =
INFO  15:02:58,703 - #18 inkrement
INFO  15:02:58,703 - #6 (
INFO  15:02:58,703 - #18 i
INFO  15:02:58,703 - #8 ,
INFO  15:02:58,703 - #17 1
INFO  15:02:58,703 - #7 )
INFO  15:02:58,703 - #5 ;
INFO  15:02:58,703 - #4 }
INFO  15:02:58,703 - #14 if
INFO  15:02:58,703 - #6 (
INFO  15:02:58,703 - #18 i
INFO  15:02:58,703 - #38 ==
INFO  15:02:58,703 - #17 3
INFO  15:02:58,703 - #35 &&
INFO  15:02:58,703 - #18 verify
INFO  15:02:58,703 - #6 (
INFO  15:02:58,703 - #7 )
INFO  15:02:58,703 - #7 )
INFO  15:02:58,703 - #9 print
INFO  15:02:58,703 - #6 (
INFO  15:02:58,703 - #36 -
INFO  15:02:58,703 - #17 4
INFO  15:02:58,703 - #7 )
INFO  15:02:58,704 - #5 ;
INFO  15:02:58,704 - #15 else
INFO  15:02:58,704 - #9 print
INFO  15:02:58,704 - #6 (
INFO  15:02:58,704 - #17 4
INFO  15:02:58,704 - #7 )
INFO  15:02:58,704 - #5 ;
INFO  15:02:58,704 - #28 read
INFO  15:02:58,704 - #6 (
INFO  15:02:58,704 - #18 niz
INFO  15:02:58,704 - #23 [
INFO  15:02:58,704 - #17 0
INFO  15:02:58,704 - #24 ]
INFO  15:02:58,704 - #7 )
INFO  15:02:58,704 - #5 ;
INFO  15:02:58,704 - #28 read
INFO  15:02:58,704 - #6 (
INFO  15:02:58,704 - #18 niz
INFO  15:02:58,704 - #23 [
INFO  15:02:58,704 - #17 1
INFO  15:02:58,704 - #24 ]
INFO  15:02:58,704 - #7 )
INFO  15:02:58,704 - #5 ;
INFO  15:02:58,704 - #28 read
INFO  15:02:58,704 - #6 (
INFO  15:02:58,704 - #18 niz
INFO  15:02:58,704 - #23 [
INFO  15:02:58,704 - #17 2
INFO  15:02:58,704 - #24 ]
INFO  15:02:58,704 - #7 )
INFO  15:02:58,704 - #5 ;
INFO  15:02:58,704 - #9 print
INFO  15:02:58,704 - #6 (
INFO  15:02:58,704 - #18 eol
INFO  15:02:58,705 - #7 )
INFO  15:02:58,705 - #5 ;
INFO  15:02:58,705 - #9 print
INFO  15:02:58,705 - #6 (
INFO  15:02:58,705 - #18 sum
INFO  15:02:58,705 - #6 (
INFO  15:02:58,705 - #18 sum
INFO  15:02:58,705 - #6 (
INFO  15:02:58,705 - #18 niz
INFO  15:02:58,705 - #23 [
INFO  15:02:58,705 - #17 0
INFO  15:02:58,705 - #24 ]
INFO  15:02:58,705 - #8 ,
INFO  15:02:58,705 - #18 niz
INFO  15:02:58,705 - #23 [
INFO  15:02:58,705 - #17 1
INFO  15:02:58,705 - #24 ]
INFO  15:02:58,705 - #7 )
INFO  15:02:58,705 - #8 ,
INFO  15:02:58,705 - #18 niz
INFO  15:02:58,705 - #23 [
INFO  15:02:58,705 - #17 2
INFO  15:02:58,705 - #24 ]
INFO  15:02:58,705 - #7 )
INFO  15:02:58,705 - #7 )
INFO  15:02:58,705 - #5 ;
INFO  15:02:58,705 - #9 print
INFO  15:02:58,705 - #6 (
INFO  15:02:58,705 - #18 eol
INFO  15:02:58,705 - #7 )
INFO  15:02:58,706 - #5 ;
INFO  15:02:58,706 - #9 print
INFO  15:02:58,706 - #6 (
INFO  15:02:58,706 - #18 inkrement
INFO  15:02:58,706 - #6 (
INFO  15:02:58,706 - #18 niz
INFO  15:02:58,706 - #23 [
INFO  15:02:58,706 - #17 2
INFO  15:02:58,706 - #24 ]
INFO  15:02:58,706 - #8 ,
INFO  15:02:58,706 - #20 true
INFO  15:02:58,706 - #7 )
INFO  15:02:58,706 - #7 )
INFO  15:02:58,706 - #5 ;
INFO  15:02:58,706 - #18 a
INFO  15:02:58,706 - #12 =
INFO  15:02:58,706 - #17 3
INFO  15:02:58,706 - #5 ;
INFO  15:02:58,706 - #18 i
INFO  15:02:58,706 - #12 =
INFO  15:02:58,706 - #17 0
INFO  15:02:58,706 - #5 ;
INFO  15:02:58,706 - #25 while
INFO  15:02:58,706 - #6 (
INFO  15:02:58,706 - #18 i
INFO  15:02:58,706 - #42 <
INFO  15:02:58,706 - #17 3
INFO  15:02:58,706 - #7 )
INFO  15:02:58,706 - #3 {
INFO  15:02:58,706 - #18 niz
INFO  15:02:58,706 - #23 [
INFO  15:02:58,706 - #18 i
INFO  15:02:58,706 - #24 ]
INFO  15:02:58,706 - #12 =
INFO  15:02:58,706 - #18 niz
INFO  15:02:58,706 - #23 [
INFO  15:02:58,706 - #18 i
INFO  15:02:58,706 - #24 ]
INFO  15:02:58,707 - #44 *
INFO  15:02:58,707 - #17 2
INFO  15:02:58,707 - #44 *
INFO  15:02:58,707 - #18 a
INFO  15:02:58,707 - #5 ;
INFO  15:02:58,707 - #18 i
INFO  15:02:58,707 - #32 ++
INFO  15:02:58,707 - #5 ;
INFO  15:02:58,707 - #4 }
INFO  15:02:58,707 - #18 niz
INFO  15:02:58,707 - #30 .
INFO  15:02:58,707 - #29 foreach
INFO  15:02:58,707 - #6 (
INFO  15:02:58,707 - #18 curr
INFO  15:02:58,707 - #31 =>
INFO  15:02:58,707 - #9 print
INFO  15:02:58,708 - #6 (
INFO  15:02:58,708 - #18 curr
INFO  15:02:58,708 - #44 *
INFO  15:02:58,708 - #17 3
INFO  15:02:58,708 - #7 )
INFO  15:02:58,708 - #5 ;
INFO  15:02:58,708 - #7 )
INFO  15:02:58,708 - #5 ;
INFO  15:02:58,708 - #18 i
INFO  15:02:58,708 - #12 =
INFO  15:02:58,708 - #17 0
INFO  15:02:58,708 - #5 ;
INFO  15:02:58,708 - #25 while
INFO  15:02:58,708 - #6 (
INFO  15:02:58,708 - #18 i
INFO  15:02:58,708 - #42 <
INFO  15:02:58,708 - #17 3
INFO  15:02:58,708 - #7 )
INFO  15:02:58,708 - #3 {
INFO  15:02:58,708 - #9 print
INFO  15:02:58,708 - #6 (
INFO  15:02:58,708 - #18 niz2
INFO  15:02:58,708 - #23 [
INFO  15:02:58,708 - #18 i
INFO  15:02:58,708 - #24 ]
INFO  15:02:58,708 - #7 )
INFO  15:02:58,708 - #5 ;
INFO  15:02:58,708 - #18 i
INFO  15:02:58,708 - #32 ++
INFO  15:02:58,709 - #5 ;
INFO  15:02:58,709 - #4 }
INFO  15:02:58,709 - #4 }
INFO  15:02:58,709 - #4 }
ERROR 15:02:58,724 - Stvarni parametar nije dodeljiv formalnom na poziciji 2 funkcije inkrement na liniji 83
ERROR 15:02:58,725 - Parsiranje NIJE uspesno zavrseno!
