INFO  13:23:10,502 - Compiling source file: D:\Desktop\PP1\Projekat\projekat\workspace\MJCompiler\test\test302.mj
INFO  13:23:10,555 - #2 program
INFO  13:23:10,555 - #18 test302
INFO  13:23:10,555 - #16 const
INFO  13:23:10,556 - #18 int
INFO  13:23:10,556 - #18 jedan
INFO  13:23:10,556 - #12 =
INFO  13:23:10,556 - #17 1
INFO  13:23:10,556 - #5 ;
INFO  13:23:10,557 - #18 int
INFO  13:23:10,558 - #18 i
INFO  13:23:10,558 - #5 ;
INFO  13:23:10,560 - #18 bool
INFO  13:23:10,561 - #18 ibool
INFO  13:23:10,561 - #5 ;
INFO  13:23:10,561 - #18 int
INFO  13:23:10,561 - #18 niz2
INFO  13:23:10,561 - #23 [
INFO  13:23:10,562 - #24 ]
INFO  13:23:10,562 - #5 ;
INFO  13:23:10,562 - #18 int
INFO  13:23:10,562 - #18 niz
INFO  13:23:10,562 - #23 [
INFO  13:23:10,562 - #24 ]
INFO  13:23:10,562 - #5 ;
INFO  13:23:10,562 - #18 int
INFO  13:23:10,562 - #18 a
INFO  13:23:10,562 - #8 ,
INFO  13:23:10,562 - #18 curr
INFO  13:23:10,562 - #5 ;
INFO  13:23:10,562 - #3 {
INFO  13:23:10,562 - #18 int
INFO  13:23:10,563 - #18 sum
INFO  13:23:10,563 - #6 (
INFO  13:23:10,563 - #18 int
INFO  13:23:10,563 - #18 z
INFO  13:23:10,563 - #8 ,
INFO  13:23:10,563 - #18 int
INFO  13:23:10,564 - #18 d
INFO  13:23:10,564 - #7 )
INFO  13:23:10,564 - #3 {
INFO  13:23:10,564 - #10 return
INFO  13:23:10,565 - #18 z
INFO  13:23:10,565 - #11 +
INFO  13:23:10,566 - #18 d
INFO  13:23:10,567 - #5 ;
INFO  13:23:10,567 - #4 }
INFO  13:23:10,567 - #18 int
INFO  13:23:10,568 - #18 inkrement
INFO  13:23:10,568 - #6 (
INFO  13:23:10,568 - #18 int
INFO  13:23:10,568 - #18 a
INFO  13:23:10,568 - #8 ,
INFO  13:23:10,568 - #18 int
INFO  13:23:10,568 - #18 inc
INFO  13:23:10,568 - #7 )
INFO  13:23:10,568 - #18 int
INFO  13:23:10,568 - #18 pom
INFO  13:23:10,568 - #5 ;
INFO  13:23:10,568 - #3 {
INFO  13:23:10,568 - #14 if
INFO  13:23:10,568 - #6 (
INFO  13:23:10,568 - #18 inc
INFO  13:23:10,569 - #38 ==
INFO  13:23:10,569 - #18 jedan
INFO  13:23:10,570 - #7 )
INFO  13:23:10,570 - #18 pom
INFO  13:23:10,571 - #12 =
INFO  13:23:10,571 - #17 1
INFO  13:23:10,571 - #5 ;
INFO  13:23:10,572 - #15 else
INFO  13:23:10,572 - #14 if
INFO  13:23:10,572 - #6 (
INFO  13:23:10,572 - #18 inc
INFO  13:23:10,572 - #38 ==
INFO  13:23:10,573 - #17 2
INFO  13:23:10,573 - #7 )
INFO  13:23:10,573 - #18 pom
INFO  13:23:10,573 - #12 =
INFO  13:23:10,573 - #18 a
INFO  13:23:10,573 - #5 ;
INFO  13:23:10,573 - #10 return
INFO  13:23:10,574 - #18 sum
INFO  13:23:10,575 - #6 (
INFO  13:23:10,575 - #18 a
INFO  13:23:10,575 - #8 ,
INFO  13:23:10,575 - #18 pom
INFO  13:23:10,575 - #7 )
INFO  13:23:10,575 - #5 ;
INFO  13:23:10,575 - #4 }
INFO  13:23:10,575 - #18 bool
INFO  13:23:10,575 - #18 verify
INFO  13:23:10,575 - #6 (
INFO  13:23:10,575 - #7 )
INFO  13:23:10,576 - #3 {
INFO  13:23:10,576 - #9 print
INFO  13:23:10,576 - #6 (
INFO  13:23:10,576 - #19 v
INFO  13:23:10,576 - #7 )
INFO  13:23:10,577 - #5 ;
INFO  13:23:10,577 - #10 return
INFO  13:23:10,577 - #20 false
INFO  13:23:10,577 - #5 ;
INFO  13:23:10,577 - #4 }
INFO  13:23:10,577 - #13 void
INFO  13:23:10,577 - #18 main
INFO  13:23:10,578 - #6 (
INFO  13:23:10,578 - #7 )
INFO  13:23:10,578 - #3 {
INFO  13:23:10,578 - #14 if
INFO  13:23:10,578 - #6 (
INFO  13:23:10,578 - #17 1
INFO  13:23:10,578 - #39 !=
INFO  13:23:10,578 - #17 1
INFO  13:23:10,579 - #7 )
INFO  13:23:10,579 - #9 print
INFO  13:23:10,579 - #6 (
INFO  13:23:10,579 - #36 -
INFO  13:23:10,579 - #17 6
INFO  13:23:10,580 - #7 )
INFO  13:23:10,580 - #5 ;
INFO  13:23:10,580 - #15 else
INFO  13:23:10,580 - #9 print
INFO  13:23:10,580 - #6 (
INFO  13:23:10,580 - #17 0
INFO  13:23:10,580 - #7 )
INFO  13:23:10,581 - #5 ;
INFO  13:23:10,581 - #18 ibool
INFO  13:23:10,581 - #12 =
INFO  13:23:10,581 - #20 false
INFO  13:23:10,581 - #5 ;
INFO  13:23:10,581 - #18 i
INFO  13:23:10,581 - #12 =
INFO  13:23:10,581 - #17 0
INFO  13:23:10,581 - #5 ;
INFO  13:23:10,581 - #25 while
INFO  13:23:10,581 - #6 (
INFO  13:23:10,581 - #18 i
INFO  13:23:10,582 - #42 <
INFO  13:23:10,582 - #17 5
INFO  13:23:10,583 - #7 )
INFO  13:23:10,583 - #3 {
INFO  13:23:10,583 - #14 if
INFO  13:23:10,583 - #6 (
INFO  13:23:10,583 - #18 i
INFO  13:23:10,583 - #38 ==
INFO  13:23:10,583 - #17 2
INFO  13:23:10,583 - #7 )
INFO  13:23:10,583 - #18 ibool
INFO  13:23:10,583 - #12 =
INFO  13:23:10,584 - #20 true
INFO  13:23:10,584 - #5 ;
INFO  13:23:10,584 - #18 i
INFO  13:23:10,584 - #32 ++
INFO  13:23:10,584 - #5 ;
INFO  13:23:10,584 - #4 }
INFO  13:23:10,584 - #14 if
INFO  13:23:10,584 - #6 (
INFO  13:23:10,584 - #18 ibool
INFO  13:23:10,584 - #7 )
INFO  13:23:10,585 - #14 if
INFO  13:23:10,585 - #6 (
INFO  13:23:10,585 - #18 i
INFO  13:23:10,585 - #38 ==
INFO  13:23:10,585 - #17 5
INFO  13:23:10,587 - #7 )
INFO  13:23:10,587 - #9 print
INFO  13:23:10,587 - #6 (
INFO  13:23:10,587 - #17 1
INFO  13:23:10,587 - #7 )
INFO  13:23:10,587 - #5 ;
INFO  13:23:10,587 - #15 else
INFO  13:23:10,587 - #9 print
INFO  13:23:10,587 - #6 (
INFO  13:23:10,587 - #36 -
INFO  13:23:10,587 - #17 1
INFO  13:23:10,587 - #7 )
INFO  13:23:10,587 - #5 ;
INFO  13:23:10,588 - #18 a
INFO  13:23:10,588 - #12 =
INFO  13:23:10,588 - #17 2
INFO  13:23:10,588 - #5 ;
INFO  13:23:10,588 - #18 niz
INFO  13:23:10,588 - #12 =
INFO  13:23:10,588 - #37 new
INFO  13:23:10,588 - #18 int
INFO  13:23:10,588 - #23 [
INFO  13:23:10,588 - #17 3
INFO  13:23:10,588 - #24 ]
INFO  13:23:10,588 - #5 ;
INFO  13:23:10,588 - #18 niz
INFO  13:23:10,588 - #23 [
INFO  13:23:10,589 - #17 0
INFO  13:23:10,589 - #24 ]
INFO  13:23:10,589 - #12 =
INFO  13:23:10,589 - #17 1
INFO  13:23:10,589 - #44 *
INFO  13:23:10,589 - #18 a
INFO  13:23:10,590 - #5 ;
INFO  13:23:10,590 - #18 niz
INFO  13:23:10,590 - #23 [
INFO  13:23:10,590 - #17 1
INFO  13:23:10,590 - #24 ]
INFO  13:23:10,590 - #12 =
INFO  13:23:10,590 - #17 2
INFO  13:23:10,590 - #44 *
INFO  13:23:10,590 - #18 a
INFO  13:23:10,591 - #5 ;
INFO  13:23:10,591 - #18 niz
INFO  13:23:10,591 - #23 [
INFO  13:23:10,591 - #17 2
INFO  13:23:10,591 - #24 ]
INFO  13:23:10,591 - #12 =
INFO  13:23:10,591 - #18 sum
INFO  13:23:10,591 - #6 (
INFO  13:23:10,591 - #18 niz
INFO  13:23:10,591 - #23 [
INFO  13:23:10,591 - #17 1
INFO  13:23:10,591 - #24 ]
INFO  13:23:10,591 - #8 ,
INFO  13:23:10,591 - #18 niz
INFO  13:23:10,591 - #23 [
INFO  13:23:10,591 - #17 0
INFO  13:23:10,591 - #24 ]
INFO  13:23:10,591 - #7 )
INFO  13:23:10,591 - #44 *
INFO  13:23:10,591 - #18 a
INFO  13:23:10,591 - #11 +
INFO  13:23:10,591 - #17 1
INFO  13:23:10,591 - #5 ;
INFO  13:23:10,591 - #14 if
INFO  13:23:10,591 - #6 (
INFO  13:23:10,591 - #18 verify
INFO  13:23:10,591 - #6 (
INFO  13:23:10,591 - #7 )
INFO  13:23:10,592 - #34 ||
INFO  13:23:10,593 - #18 niz
INFO  13:23:10,593 - #23 [
INFO  13:23:10,593 - #17 2
INFO  13:23:10,593 - #24 ]
INFO  13:23:10,593 - #38 ==
INFO  13:23:10,593 - #17 4
INFO  13:23:10,593 - #7 )
INFO  13:23:10,593 - #9 print
INFO  13:23:10,593 - #6 (
INFO  13:23:10,593 - #18 ord
INFO  13:23:10,593 - #6 (
INFO  13:23:10,593 - #19 A
INFO  13:23:10,593 - #7 )
INFO  13:23:10,593 - #7 )
INFO  13:23:10,593 - #5 ;
INFO  13:23:10,593 - #15 else
INFO  13:23:10,593 - #9 print
INFO  13:23:10,593 - #6 (
INFO  13:23:10,593 - #18 ord
INFO  13:23:10,593 - #6 (
INFO  13:23:10,594 - #19 a
INFO  13:23:10,594 - #7 )
INFO  13:23:10,594 - #7 )
INFO  13:23:10,594 - #5 ;
INFO  13:23:10,594 - #9 print
INFO  13:23:10,594 - #6 (
INFO  13:23:10,594 - #18 eol
INFO  13:23:10,594 - #7 )
INFO  13:23:10,594 - #5 ;
INFO  13:23:10,594 - #18 i
INFO  13:23:10,594 - #12 =
INFO  13:23:10,594 - #17 0
INFO  13:23:10,594 - #5 ;
INFO  13:23:10,594 - #25 while
INFO  13:23:10,594 - #6 (
INFO  13:23:10,594 - #18 i
INFO  13:23:10,594 - #42 <
INFO  13:23:10,594 - #17 10
INFO  13:23:10,595 - #7 )
INFO  13:23:10,595 - #3 {
INFO  13:23:10,595 - #14 if
INFO  13:23:10,595 - #6 (
INFO  13:23:10,595 - #18 i
INFO  13:23:10,595 - #38 ==
INFO  13:23:10,595 - #17 3
INFO  13:23:10,595 - #7 )
INFO  13:23:10,595 - #3 {
INFO  13:23:10,595 - #18 i
INFO  13:23:10,595 - #32 ++
INFO  13:23:10,595 - #5 ;
INFO  13:23:10,595 - #27 continue
INFO  13:23:10,595 - #5 ;
INFO  13:23:10,595 - #4 }
INFO  13:23:10,596 - #14 if
INFO  13:23:10,596 - #6 (
INFO  13:23:10,596 - #18 i
INFO  13:23:10,596 - #38 ==
INFO  13:23:10,596 - #17 4
INFO  13:23:10,596 - #7 )
INFO  13:23:10,596 - #26 break
INFO  13:23:10,596 - #5 ;
INFO  13:23:10,596 - #18 i
INFO  13:23:10,596 - #12 =
INFO  13:23:10,596 - #18 inkrement
INFO  13:23:10,596 - #6 (
INFO  13:23:10,596 - #18 i
INFO  13:23:10,596 - #8 ,
INFO  13:23:10,596 - #17 1
INFO  13:23:10,597 - #7 )
INFO  13:23:10,597 - #5 ;
INFO  13:23:10,597 - #4 }
INFO  13:23:10,597 - #14 if
INFO  13:23:10,597 - #6 (
INFO  13:23:10,597 - #18 i
INFO  13:23:10,597 - #38 ==
INFO  13:23:10,597 - #17 3
INFO  13:23:10,597 - #35 &&
INFO  13:23:10,597 - #18 verify
INFO  13:23:10,597 - #6 (
INFO  13:23:10,597 - #7 )
INFO  13:23:10,597 - #7 )
INFO  13:23:10,597 - #9 print
INFO  13:23:10,597 - #6 (
INFO  13:23:10,597 - #36 -
INFO  13:23:10,597 - #17 4
INFO  13:23:10,597 - #7 )
INFO  13:23:10,597 - #5 ;
INFO  13:23:10,597 - #15 else
INFO  13:23:10,597 - #9 print
INFO  13:23:10,597 - #6 (
INFO  13:23:10,597 - #17 4
INFO  13:23:10,597 - #7 )
INFO  13:23:10,597 - #5 ;
INFO  13:23:10,597 - #28 read
INFO  13:23:10,598 - #6 (
INFO  13:23:10,598 - #18 niz
INFO  13:23:10,598 - #23 [
INFO  13:23:10,598 - #17 0
INFO  13:23:10,598 - #24 ]
INFO  13:23:10,598 - #7 )
INFO  13:23:10,598 - #5 ;
INFO  13:23:10,598 - #28 read
INFO  13:23:10,598 - #6 (
INFO  13:23:10,598 - #18 niz
INFO  13:23:10,598 - #23 [
INFO  13:23:10,598 - #17 1
INFO  13:23:10,598 - #24 ]
INFO  13:23:10,598 - #7 )
INFO  13:23:10,598 - #5 ;
INFO  13:23:10,598 - #28 read
INFO  13:23:10,598 - #6 (
INFO  13:23:10,598 - #18 niz
INFO  13:23:10,598 - #23 [
INFO  13:23:10,598 - #17 2
INFO  13:23:10,598 - #24 ]
INFO  13:23:10,598 - #7 )
INFO  13:23:10,598 - #5 ;
INFO  13:23:10,598 - #9 print
INFO  13:23:10,598 - #6 (
INFO  13:23:10,598 - #18 eol
INFO  13:23:10,598 - #7 )
INFO  13:23:10,598 - #5 ;
INFO  13:23:10,598 - #9 print
INFO  13:23:10,598 - #6 (
INFO  13:23:10,598 - #18 sum
INFO  13:23:10,599 - #6 (
INFO  13:23:10,599 - #18 sum
INFO  13:23:10,599 - #6 (
INFO  13:23:10,599 - #18 niz
INFO  13:23:10,599 - #23 [
INFO  13:23:10,599 - #17 0
INFO  13:23:10,599 - #24 ]
INFO  13:23:10,599 - #8 ,
INFO  13:23:10,599 - #18 niz
INFO  13:23:10,599 - #23 [
INFO  13:23:10,599 - #17 1
INFO  13:23:10,599 - #24 ]
INFO  13:23:10,599 - #7 )
INFO  13:23:10,599 - #8 ,
INFO  13:23:10,599 - #18 niz
INFO  13:23:10,599 - #23 [
INFO  13:23:10,599 - #17 2
INFO  13:23:10,599 - #24 ]
INFO  13:23:10,599 - #7 )
INFO  13:23:10,599 - #7 )
INFO  13:23:10,599 - #5 ;
INFO  13:23:10,599 - #9 print
INFO  13:23:10,599 - #6 (
INFO  13:23:10,599 - #18 eol
INFO  13:23:10,599 - #7 )
INFO  13:23:10,599 - #5 ;
INFO  13:23:10,599 - #9 print
INFO  13:23:10,599 - #6 (
INFO  13:23:10,599 - #18 inkrement
INFO  13:23:10,599 - #6 (
INFO  13:23:10,599 - #18 niz
INFO  13:23:10,599 - #23 [
INFO  13:23:10,600 - #17 2
INFO  13:23:10,600 - #24 ]
INFO  13:23:10,600 - #8 ,
INFO  13:23:10,600 - #17 2
INFO  13:23:10,600 - #7 )
INFO  13:23:10,600 - #7 )
INFO  13:23:10,600 - #5 ;
INFO  13:23:10,600 - #18 a
INFO  13:23:10,600 - #12 =
INFO  13:23:10,600 - #17 3
INFO  13:23:10,600 - #5 ;
INFO  13:23:10,600 - #18 i
INFO  13:23:10,600 - #12 =
INFO  13:23:10,600 - #17 0
INFO  13:23:10,600 - #5 ;
INFO  13:23:10,600 - #25 while
INFO  13:23:10,600 - #6 (
INFO  13:23:10,600 - #18 i
INFO  13:23:10,600 - #42 <
INFO  13:23:10,600 - #17 3
INFO  13:23:10,600 - #7 )
INFO  13:23:10,600 - #3 {
INFO  13:23:10,600 - #18 niz
INFO  13:23:10,600 - #23 [
INFO  13:23:10,600 - #18 i
INFO  13:23:10,600 - #24 ]
INFO  13:23:10,600 - #12 =
INFO  13:23:10,600 - #18 niz
INFO  13:23:10,600 - #23 [
INFO  13:23:10,600 - #18 i
INFO  13:23:10,600 - #24 ]
INFO  13:23:10,600 - #44 *
INFO  13:23:10,600 - #17 2
INFO  13:23:10,600 - #44 *
INFO  13:23:10,600 - #18 a
INFO  13:23:10,601 - #5 ;
INFO  13:23:10,601 - #18 i
INFO  13:23:10,601 - #32 ++
INFO  13:23:10,601 - #5 ;
INFO  13:23:10,601 - #4 }
INFO  13:23:10,601 - #18 niz
INFO  13:23:10,601 - #30 .
INFO  13:23:10,601 - #29 foreach
INFO  13:23:10,601 - #6 (
INFO  13:23:10,601 - #18 curr
INFO  13:23:10,601 - #31 =>
INFO  13:23:10,601 - #9 print
INFO  13:23:10,601 - #6 (
INFO  13:23:10,601 - #18 curr
INFO  13:23:10,601 - #44 *
INFO  13:23:10,601 - #17 3
INFO  13:23:10,601 - #7 )
INFO  13:23:10,602 - #5 ;
INFO  13:23:10,602 - #7 )
INFO  13:23:10,602 - #5 ;
INFO  13:23:10,602 - #18 i
INFO  13:23:10,602 - #12 =
INFO  13:23:10,602 - #17 0
INFO  13:23:10,602 - #5 ;
INFO  13:23:10,602 - #25 while
INFO  13:23:10,602 - #6 (
INFO  13:23:10,602 - #18 i
INFO  13:23:10,602 - #42 <
INFO  13:23:10,602 - #17 3
INFO  13:23:10,602 - #7 )
INFO  13:23:10,602 - #3 {
INFO  13:23:10,602 - #9 print
INFO  13:23:10,602 - #6 (
INFO  13:23:10,602 - #18 niz2
INFO  13:23:10,602 - #23 [
INFO  13:23:10,602 - #18 i
INFO  13:23:10,602 - #24 ]
INFO  13:23:10,602 - #7 )
INFO  13:23:10,602 - #5 ;
INFO  13:23:10,602 - #18 i
INFO  13:23:10,602 - #32 ++
INFO  13:23:10,602 - #5 ;
INFO  13:23:10,602 - #4 }
INFO  13:23:10,602 - #4 }
INFO  13:23:10,602 - #4 }
ERROR 13:23:10,622 - Tip izraza u return naredbi ne slaze se sa tipom povratne vrednosti funkcije inkrement na liniji 2
ERROR 13:23:10,622 - Nekompatibilni tipovi u izrazu za mulop. na liniji 57
ERROR 13:23:10,622 - Nekompatibilni tipovi u izrazu za addop. na liniji 9
ERROR 13:23:10,622 - Designator i dodeljen izraz nisu kompatibilni za dodelu.  na liniji 57
ERROR 13:23:10,623 - Izraz nije boolean tipa. na liniji 4
ERROR 13:23:10,623 - Izraz nije odgovarajuceg tipa (int, char, bool)  na liniji 35
ERROR 13:23:10,623 - Izraz nije odgovarajuceg tipa (int, char, bool)  na liniji 12
ERROR 13:23:10,623 - Nesipravno koriscenje break-a, ne nalazite se u while/foreach pelji.
ERROR 13:23:10,623 - Designator i dodeljen izraz nisu kompatibilni za dodelu.  na liniji 70
ERROR 13:23:10,623 - Izraz nije boolean tipa. na liniji 12
ERROR 13:23:10,623 - Izraz nije odgovarajuceg tipa (int, char, bool)  na liniji 7
ERROR 13:23:10,623 - Izraz nije odgovarajuceg tipa (int, char, bool)  na liniji 7
ERROR 13:23:10,623 - Designator ne predstavlja niz! na liniji 92
ERROR 13:23:10,623 - Parsiranje NIJE uspesno zavrseno!
