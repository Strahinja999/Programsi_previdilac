INFO  13:26:37,891 - Compiling source file: D:\Desktop\PP1\Projekat\projekat\workspace\MJCompiler\test\test302.mj
INFO  13:26:37,928 - #2 program
INFO  13:26:37,928 - #18 test302
INFO  13:26:37,928 - #16 const
INFO  13:26:37,929 - #18 int
INFO  13:26:37,929 - #18 jedan
INFO  13:26:37,929 - #12 =
INFO  13:26:37,930 - #17 1
INFO  13:26:37,930 - #5 ;
INFO  13:26:37,930 - #18 int
INFO  13:26:37,931 - #18 i
INFO  13:26:37,931 - #5 ;
INFO  13:26:37,932 - #18 bool
INFO  13:26:37,933 - #18 ibool
INFO  13:26:37,933 - #5 ;
INFO  13:26:37,933 - #18 int
INFO  13:26:37,933 - #18 niz2
INFO  13:26:37,933 - #23 [
INFO  13:26:37,933 - #24 ]
INFO  13:26:37,933 - #5 ;
INFO  13:26:37,934 - #18 int
INFO  13:26:37,934 - #18 niz
INFO  13:26:37,934 - #23 [
INFO  13:26:37,934 - #24 ]
INFO  13:26:37,934 - #5 ;
INFO  13:26:37,934 - #18 int
INFO  13:26:37,934 - #18 a
INFO  13:26:37,934 - #8 ,
INFO  13:26:37,934 - #18 curr
INFO  13:26:37,934 - #5 ;
INFO  13:26:37,935 - #3 {
INFO  13:26:37,935 - #18 int
INFO  13:26:37,935 - #18 sum
INFO  13:26:37,935 - #6 (
INFO  13:26:37,935 - #18 int
INFO  13:26:37,935 - #18 z
INFO  13:26:37,935 - #8 ,
INFO  13:26:37,936 - #18 int
INFO  13:26:37,936 - #18 d
INFO  13:26:37,936 - #7 )
INFO  13:26:37,936 - #3 {
INFO  13:26:37,937 - #10 return
INFO  13:26:37,937 - #18 z
INFO  13:26:37,938 - #11 +
INFO  13:26:37,938 - #18 d
INFO  13:26:37,939 - #5 ;
INFO  13:26:37,939 - #4 }
INFO  13:26:37,940 - #18 int
INFO  13:26:37,940 - #18 inkrement
INFO  13:26:37,940 - #6 (
INFO  13:26:37,940 - #18 int
INFO  13:26:37,940 - #18 a
INFO  13:26:37,940 - #8 ,
INFO  13:26:37,940 - #18 int
INFO  13:26:37,940 - #18 inc
INFO  13:26:37,941 - #7 )
INFO  13:26:37,941 - #18 int
INFO  13:26:37,941 - #18 pom
INFO  13:26:37,941 - #5 ;
INFO  13:26:37,941 - #3 {
INFO  13:26:37,941 - #14 if
INFO  13:26:37,941 - #6 (
INFO  13:26:37,941 - #18 inc
INFO  13:26:37,941 - #38 ==
INFO  13:26:37,941 - #18 jedan
INFO  13:26:37,942 - #7 )
INFO  13:26:37,943 - #18 pom
INFO  13:26:37,943 - #12 =
INFO  13:26:37,943 - #17 1
INFO  13:26:37,943 - #5 ;
INFO  13:26:37,944 - #15 else
INFO  13:26:37,944 - #14 if
INFO  13:26:37,944 - #6 (
INFO  13:26:37,944 - #18 inc
INFO  13:26:37,944 - #38 ==
INFO  13:26:37,944 - #17 2
INFO  13:26:37,944 - #7 )
INFO  13:26:37,944 - #18 pom
INFO  13:26:37,944 - #12 =
INFO  13:26:37,944 - #18 a
INFO  13:26:37,945 - #5 ;
INFO  13:26:37,945 - #10 return
INFO  13:26:37,945 - #18 sum
INFO  13:26:37,945 - #6 (
INFO  13:26:37,945 - #18 a
INFO  13:26:37,945 - #8 ,
INFO  13:26:37,946 - #18 pom
INFO  13:26:37,946 - #7 )
INFO  13:26:37,946 - #5 ;
INFO  13:26:37,946 - #4 }
INFO  13:26:37,946 - #18 bool
INFO  13:26:37,946 - #18 verify
INFO  13:26:37,946 - #6 (
INFO  13:26:37,946 - #7 )
INFO  13:26:37,947 - #3 {
INFO  13:26:37,947 - #9 print
INFO  13:26:37,947 - #6 (
INFO  13:26:37,947 - #19 v
INFO  13:26:37,947 - #7 )
INFO  13:26:37,947 - #5 ;
INFO  13:26:37,947 - #10 return
INFO  13:26:37,949 - #20 false
INFO  13:26:37,949 - #5 ;
INFO  13:26:37,950 - #4 }
INFO  13:26:37,950 - #13 void
INFO  13:26:37,950 - #18 main
INFO  13:26:37,950 - #6 (
INFO  13:26:37,950 - #7 )
INFO  13:26:37,950 - #3 {
INFO  13:26:37,950 - #14 if
INFO  13:26:37,950 - #6 (
INFO  13:26:37,950 - #17 1
INFO  13:26:37,950 - #39 !=
INFO  13:26:37,950 - #17 1
INFO  13:26:37,951 - #7 )
INFO  13:26:37,951 - #9 print
INFO  13:26:37,951 - #6 (
INFO  13:26:37,951 - #36 -
INFO  13:26:37,951 - #17 6
INFO  13:26:37,952 - #7 )
INFO  13:26:37,952 - #5 ;
INFO  13:26:37,952 - #15 else
INFO  13:26:37,952 - #9 print
INFO  13:26:37,952 - #6 (
INFO  13:26:37,952 - #17 0
INFO  13:26:37,952 - #7 )
INFO  13:26:37,952 - #5 ;
INFO  13:26:37,952 - #18 ibool
INFO  13:26:37,952 - #12 =
INFO  13:26:37,952 - #20 false
INFO  13:26:37,952 - #5 ;
INFO  13:26:37,952 - #18 i
INFO  13:26:37,952 - #12 =
INFO  13:26:37,952 - #17 0
INFO  13:26:37,952 - #5 ;
INFO  13:26:37,952 - #25 while
INFO  13:26:37,952 - #6 (
INFO  13:26:37,952 - #18 i
INFO  13:26:37,953 - #42 <
INFO  13:26:37,953 - #17 5
INFO  13:26:37,953 - #7 )
INFO  13:26:37,953 - #3 {
INFO  13:26:37,953 - #14 if
INFO  13:26:37,953 - #6 (
INFO  13:26:37,953 - #18 i
INFO  13:26:37,954 - #38 ==
INFO  13:26:37,954 - #17 2
INFO  13:26:37,954 - #7 )
INFO  13:26:37,954 - #18 ibool
INFO  13:26:37,954 - #12 =
INFO  13:26:37,954 - #20 true
INFO  13:26:37,954 - #5 ;
INFO  13:26:37,954 - #18 i
INFO  13:26:37,954 - #32 ++
INFO  13:26:37,954 - #5 ;
INFO  13:26:37,954 - #4 }
INFO  13:26:37,954 - #14 if
INFO  13:26:37,954 - #6 (
INFO  13:26:37,954 - #18 ibool
INFO  13:26:37,955 - #7 )
INFO  13:26:37,955 - #14 if
INFO  13:26:37,955 - #6 (
INFO  13:26:37,955 - #18 i
INFO  13:26:37,955 - #38 ==
INFO  13:26:37,955 - #17 5
INFO  13:26:37,955 - #7 )
INFO  13:26:37,955 - #9 print
INFO  13:26:37,955 - #6 (
INFO  13:26:37,955 - #17 1
INFO  13:26:37,955 - #7 )
INFO  13:26:37,955 - #5 ;
INFO  13:26:37,955 - #15 else
INFO  13:26:37,955 - #9 print
INFO  13:26:37,955 - #6 (
INFO  13:26:37,955 - #36 -
INFO  13:26:37,955 - #17 1
INFO  13:26:37,955 - #7 )
INFO  13:26:37,956 - #5 ;
INFO  13:26:37,956 - #18 a
INFO  13:26:37,956 - #12 =
INFO  13:26:37,956 - #17 2
INFO  13:26:37,956 - #5 ;
INFO  13:26:37,956 - #18 niz
INFO  13:26:37,956 - #12 =
INFO  13:26:37,956 - #37 new
INFO  13:26:37,956 - #18 int
INFO  13:26:37,956 - #23 [
INFO  13:26:37,956 - #17 3
INFO  13:26:37,956 - #24 ]
INFO  13:26:37,956 - #5 ;
INFO  13:26:37,956 - #18 niz
INFO  13:26:37,956 - #23 [
INFO  13:26:37,956 - #17 0
INFO  13:26:37,956 - #24 ]
INFO  13:26:37,956 - #12 =
INFO  13:26:37,956 - #17 1
INFO  13:26:37,957 - #44 *
INFO  13:26:37,957 - #18 a
INFO  13:26:37,957 - #5 ;
INFO  13:26:37,957 - #18 niz
INFO  13:26:37,957 - #23 [
INFO  13:26:37,957 - #17 1
INFO  13:26:37,957 - #24 ]
INFO  13:26:37,957 - #12 =
INFO  13:26:37,957 - #17 2
INFO  13:26:37,958 - #44 *
INFO  13:26:37,958 - #18 a
INFO  13:26:37,958 - #5 ;
INFO  13:26:37,958 - #18 niz
INFO  13:26:37,958 - #23 [
INFO  13:26:37,958 - #17 2
INFO  13:26:37,958 - #24 ]
INFO  13:26:37,958 - #12 =
INFO  13:26:37,958 - #18 sum
INFO  13:26:37,958 - #6 (
INFO  13:26:37,958 - #18 niz
INFO  13:26:37,958 - #23 [
INFO  13:26:37,958 - #17 1
INFO  13:26:37,958 - #24 ]
INFO  13:26:37,958 - #8 ,
INFO  13:26:37,958 - #18 niz
INFO  13:26:37,958 - #23 [
INFO  13:26:37,958 - #17 0
INFO  13:26:37,958 - #24 ]
INFO  13:26:37,958 - #7 )
INFO  13:26:37,958 - #44 *
INFO  13:26:37,958 - #18 a
INFO  13:26:37,958 - #11 +
INFO  13:26:37,958 - #17 1
INFO  13:26:37,958 - #5 ;
INFO  13:26:37,959 - #14 if
INFO  13:26:37,959 - #6 (
INFO  13:26:37,959 - #18 verify
INFO  13:26:37,959 - #6 (
INFO  13:26:37,959 - #7 )
INFO  13:26:37,959 - #34 ||
INFO  13:26:37,959 - #18 niz
INFO  13:26:37,959 - #23 [
INFO  13:26:37,959 - #17 2
INFO  13:26:37,959 - #24 ]
INFO  13:26:37,959 - #38 ==
INFO  13:26:37,959 - #17 4
INFO  13:26:37,960 - #7 )
INFO  13:26:37,960 - #9 print
INFO  13:26:37,960 - #6 (
INFO  13:26:37,960 - #18 ord
INFO  13:26:37,960 - #6 (
INFO  13:26:37,960 - #19 A
INFO  13:26:37,960 - #7 )
INFO  13:26:37,960 - #7 )
INFO  13:26:37,960 - #5 ;
INFO  13:26:37,960 - #15 else
INFO  13:26:37,960 - #9 print
INFO  13:26:37,960 - #6 (
INFO  13:26:37,960 - #18 ord
INFO  13:26:37,960 - #6 (
INFO  13:26:37,960 - #19 a
INFO  13:26:37,960 - #7 )
INFO  13:26:37,960 - #7 )
INFO  13:26:37,960 - #5 ;
INFO  13:26:37,961 - #9 print
INFO  13:26:37,961 - #6 (
INFO  13:26:37,961 - #18 eol
INFO  13:26:37,961 - #7 )
INFO  13:26:37,961 - #5 ;
INFO  13:26:37,961 - #18 i
INFO  13:26:37,961 - #12 =
INFO  13:26:37,961 - #17 0
INFO  13:26:37,961 - #5 ;
INFO  13:26:37,961 - #25 while
INFO  13:26:37,961 - #6 (
INFO  13:26:37,961 - #18 i
INFO  13:26:37,961 - #42 <
INFO  13:26:37,961 - #17 10
INFO  13:26:37,961 - #7 )
INFO  13:26:37,961 - #3 {
INFO  13:26:37,961 - #14 if
INFO  13:26:37,961 - #6 (
INFO  13:26:37,961 - #18 i
INFO  13:26:37,961 - #38 ==
INFO  13:26:37,961 - #17 3
INFO  13:26:37,961 - #7 )
INFO  13:26:37,961 - #3 {
INFO  13:26:37,961 - #18 i
INFO  13:26:37,961 - #32 ++
INFO  13:26:37,962 - #5 ;
INFO  13:26:37,962 - #27 continue
INFO  13:26:37,962 - #5 ;
INFO  13:26:37,962 - #4 }
INFO  13:26:37,962 - #14 if
INFO  13:26:37,962 - #6 (
INFO  13:26:37,963 - #18 i
INFO  13:26:37,963 - #38 ==
INFO  13:26:37,963 - #17 4
INFO  13:26:37,963 - #7 )
INFO  13:26:37,963 - #26 break
INFO  13:26:37,963 - #5 ;
INFO  13:26:37,963 - #18 i
INFO  13:26:37,963 - #12 =
INFO  13:26:37,963 - #18 inkrement
INFO  13:26:37,963 - #6 (
INFO  13:26:37,963 - #18 i
INFO  13:26:37,963 - #8 ,
INFO  13:26:37,963 - #17 1
INFO  13:26:37,963 - #7 )
INFO  13:26:37,964 - #5 ;
INFO  13:26:37,964 - #4 }
INFO  13:26:37,964 - #14 if
INFO  13:26:37,964 - #6 (
INFO  13:26:37,964 - #18 i
INFO  13:26:37,964 - #38 ==
INFO  13:26:37,964 - #17 3
INFO  13:26:37,964 - #35 &&
INFO  13:26:37,964 - #18 verify
INFO  13:26:37,964 - #6 (
INFO  13:26:37,964 - #7 )
INFO  13:26:37,964 - #7 )
INFO  13:26:37,964 - #9 print
INFO  13:26:37,964 - #6 (
INFO  13:26:37,964 - #36 -
INFO  13:26:37,964 - #17 4
INFO  13:26:37,964 - #7 )
INFO  13:26:37,964 - #5 ;
INFO  13:26:37,964 - #15 else
INFO  13:26:37,964 - #9 print
INFO  13:26:37,964 - #6 (
INFO  13:26:37,964 - #17 4
INFO  13:26:37,964 - #7 )
INFO  13:26:37,964 - #5 ;
INFO  13:26:37,964 - #28 read
INFO  13:26:37,964 - #6 (
INFO  13:26:37,964 - #18 niz
INFO  13:26:37,964 - #23 [
INFO  13:26:37,964 - #17 0
INFO  13:26:37,965 - #24 ]
INFO  13:26:37,965 - #7 )
INFO  13:26:37,965 - #5 ;
INFO  13:26:37,965 - #28 read
INFO  13:26:37,965 - #6 (
INFO  13:26:37,965 - #18 niz
INFO  13:26:37,965 - #23 [
INFO  13:26:37,965 - #17 1
INFO  13:26:37,965 - #24 ]
INFO  13:26:37,965 - #7 )
INFO  13:26:37,965 - #5 ;
INFO  13:26:37,965 - #28 read
INFO  13:26:37,965 - #6 (
INFO  13:26:37,965 - #18 niz
INFO  13:26:37,965 - #23 [
INFO  13:26:37,965 - #17 2
INFO  13:26:37,965 - #24 ]
INFO  13:26:37,965 - #7 )
INFO  13:26:37,965 - #5 ;
INFO  13:26:37,965 - #9 print
INFO  13:26:37,965 - #6 (
INFO  13:26:37,965 - #18 eol
INFO  13:26:37,965 - #7 )
INFO  13:26:37,965 - #5 ;
INFO  13:26:37,965 - #9 print
INFO  13:26:37,965 - #6 (
INFO  13:26:37,965 - #18 sum
INFO  13:26:37,965 - #6 (
INFO  13:26:37,965 - #18 sum
INFO  13:26:37,965 - #6 (
INFO  13:26:37,965 - #18 niz
INFO  13:26:37,965 - #23 [
INFO  13:26:37,965 - #17 0
INFO  13:26:37,965 - #24 ]
INFO  13:26:37,966 - #8 ,
INFO  13:26:37,966 - #18 niz
INFO  13:26:37,966 - #23 [
INFO  13:26:37,966 - #17 1
INFO  13:26:37,966 - #24 ]
INFO  13:26:37,966 - #7 )
INFO  13:26:37,966 - #8 ,
INFO  13:26:37,966 - #18 niz
INFO  13:26:37,966 - #23 [
INFO  13:26:37,966 - #17 2
INFO  13:26:37,966 - #24 ]
INFO  13:26:37,966 - #7 )
INFO  13:26:37,966 - #7 )
INFO  13:26:37,966 - #5 ;
INFO  13:26:37,966 - #9 print
INFO  13:26:37,966 - #6 (
INFO  13:26:37,966 - #18 eol
INFO  13:26:37,966 - #7 )
INFO  13:26:37,966 - #5 ;
INFO  13:26:37,966 - #9 print
INFO  13:26:37,966 - #6 (
INFO  13:26:37,966 - #18 inkrement
INFO  13:26:37,966 - #6 (
INFO  13:26:37,966 - #18 niz
INFO  13:26:37,966 - #23 [
INFO  13:26:37,966 - #17 2
INFO  13:26:37,966 - #24 ]
INFO  13:26:37,966 - #8 ,
INFO  13:26:37,966 - #17 2
INFO  13:26:37,967 - #7 )
INFO  13:26:37,967 - #7 )
INFO  13:26:37,967 - #5 ;
INFO  13:26:37,967 - #18 a
INFO  13:26:37,967 - #12 =
INFO  13:26:37,967 - #17 3
INFO  13:26:37,967 - #5 ;
INFO  13:26:37,967 - #18 i
INFO  13:26:37,967 - #12 =
INFO  13:26:37,967 - #17 0
INFO  13:26:37,967 - #5 ;
INFO  13:26:37,967 - #25 while
INFO  13:26:37,967 - #6 (
INFO  13:26:37,967 - #18 i
INFO  13:26:37,967 - #42 <
INFO  13:26:37,967 - #17 3
INFO  13:26:37,967 - #7 )
INFO  13:26:37,967 - #3 {
INFO  13:26:37,967 - #18 niz
INFO  13:26:37,967 - #23 [
INFO  13:26:37,967 - #18 i
INFO  13:26:37,967 - #24 ]
INFO  13:26:37,967 - #12 =
INFO  13:26:37,967 - #18 niz
INFO  13:26:37,967 - #23 [
INFO  13:26:37,967 - #18 i
INFO  13:26:37,967 - #24 ]
INFO  13:26:37,967 - #44 *
INFO  13:26:37,967 - #17 2
INFO  13:26:37,967 - #44 *
INFO  13:26:37,967 - #18 a
INFO  13:26:37,967 - #5 ;
INFO  13:26:37,967 - #18 i
INFO  13:26:37,967 - #32 ++
INFO  13:26:37,967 - #5 ;
INFO  13:26:37,967 - #4 }
INFO  13:26:37,967 - #18 niz
INFO  13:26:37,968 - #30 .
INFO  13:26:37,968 - #29 foreach
INFO  13:26:37,968 - #6 (
INFO  13:26:37,968 - #18 curr
INFO  13:26:37,968 - #31 =>
INFO  13:26:37,968 - #9 print
INFO  13:26:37,968 - #6 (
INFO  13:26:37,968 - #18 curr
INFO  13:26:37,968 - #44 *
INFO  13:26:37,968 - #17 3
INFO  13:26:37,968 - #7 )
INFO  13:26:37,968 - #5 ;
INFO  13:26:37,968 - #7 )
INFO  13:26:37,968 - #5 ;
INFO  13:26:37,968 - #18 i
INFO  13:26:37,968 - #12 =
INFO  13:26:37,968 - #17 0
INFO  13:26:37,969 - #5 ;
INFO  13:26:37,969 - #25 while
INFO  13:26:37,969 - #6 (
INFO  13:26:37,969 - #18 i
INFO  13:26:37,969 - #42 <
INFO  13:26:37,969 - #17 3
INFO  13:26:37,969 - #7 )
INFO  13:26:37,969 - #3 {
INFO  13:26:37,969 - #9 print
INFO  13:26:37,969 - #6 (
INFO  13:26:37,969 - #18 niz2
INFO  13:26:37,969 - #23 [
INFO  13:26:37,969 - #18 i
INFO  13:26:37,969 - #24 ]
INFO  13:26:37,969 - #7 )
INFO  13:26:37,969 - #5 ;
INFO  13:26:37,969 - #18 i
INFO  13:26:37,969 - #32 ++
INFO  13:26:37,969 - #5 ;
INFO  13:26:37,969 - #4 }
INFO  13:26:37,969 - #4 }
INFO  13:26:37,969 - #4 }
INFO  13:32:16,515 - Compiling source file: D:\Desktop\PP1\Projekat\projekat\workspace\MJCompiler\test\test302.mj
INFO  13:32:16,557 - #2 program
INFO  13:32:16,557 - #18 test302
INFO  13:32:16,557 - #16 const
INFO  13:32:16,558 - #18 int
INFO  13:32:16,558 - #18 jedan
INFO  13:32:16,558 - #12 =
INFO  13:32:16,558 - #17 1
INFO  13:32:16,558 - #5 ;
INFO  13:32:16,559 - #18 int
INFO  13:32:16,559 - #18 i
INFO  13:32:16,559 - #5 ;
INFO  13:32:16,560 - #18 bool
INFO  13:32:16,561 - #18 ibool
INFO  13:32:16,561 - #5 ;
INFO  13:32:16,561 - #18 int
INFO  13:32:16,561 - #18 niz2
INFO  13:32:16,561 - #23 [
INFO  13:32:16,561 - #24 ]
INFO  13:32:16,561 - #5 ;
INFO  13:32:16,561 - #18 int
INFO  13:32:16,561 - #18 niz
INFO  13:32:16,561 - #23 [
INFO  13:32:16,561 - #24 ]
INFO  13:32:16,562 - #5 ;
INFO  13:32:16,562 - #18 int
INFO  13:32:16,562 - #18 a
INFO  13:32:16,562 - #8 ,
INFO  13:32:16,562 - #18 curr
INFO  13:32:16,562 - #5 ;
INFO  13:32:16,562 - #3 {
INFO  13:32:16,562 - #18 int
INFO  13:32:16,562 - #18 sum
INFO  13:32:16,562 - #6 (
INFO  13:32:16,562 - #18 int
INFO  13:32:16,562 - #18 z
INFO  13:32:16,563 - #8 ,
INFO  13:32:16,563 - #18 int
INFO  13:32:16,563 - #18 d
INFO  13:32:16,563 - #7 )
INFO  13:32:16,563 - #3 {
INFO  13:32:16,564 - #10 return
INFO  13:32:16,564 - #18 z
INFO  13:32:16,565 - #11 +
INFO  13:32:16,566 - #18 d
INFO  13:32:16,566 - #5 ;
INFO  13:32:16,567 - #4 }
INFO  13:32:16,567 - #18 int
INFO  13:32:16,567 - #18 inkrement
INFO  13:32:16,567 - #6 (
INFO  13:32:16,567 - #18 int
INFO  13:32:16,567 - #18 a
INFO  13:32:16,567 - #8 ,
INFO  13:32:16,568 - #18 int
INFO  13:32:16,568 - #18 inc
INFO  13:32:16,568 - #7 )
INFO  13:32:16,568 - #18 int
INFO  13:32:16,568 - #18 pom
INFO  13:32:16,568 - #5 ;
INFO  13:32:16,568 - #3 {
INFO  13:32:16,568 - #14 if
INFO  13:32:16,568 - #6 (
INFO  13:32:16,568 - #18 inc
INFO  13:32:16,568 - #38 ==
INFO  13:32:16,568 - #18 jedan
INFO  13:32:16,569 - #7 )
INFO  13:32:16,569 - #18 pom
INFO  13:32:16,569 - #12 =
INFO  13:32:16,569 - #17 1
INFO  13:32:16,570 - #5 ;
INFO  13:32:16,570 - #15 else
INFO  13:32:16,571 - #14 if
INFO  13:32:16,571 - #6 (
INFO  13:32:16,571 - #18 inc
INFO  13:32:16,571 - #38 ==
INFO  13:32:16,571 - #17 2
INFO  13:32:16,571 - #7 )
INFO  13:32:16,571 - #18 pom
INFO  13:32:16,571 - #12 =
INFO  13:32:16,571 - #18 a
INFO  13:32:16,571 - #5 ;
INFO  13:32:16,572 - #10 return
INFO  13:32:16,572 - #18 sum
INFO  13:32:16,572 - #6 (
INFO  13:32:16,572 - #18 a
INFO  13:32:16,572 - #8 ,
INFO  13:32:16,573 - #18 pom
INFO  13:32:16,573 - #7 )
INFO  13:32:16,573 - #5 ;
INFO  13:32:16,573 - #4 }
INFO  13:32:16,573 - #18 bool
INFO  13:32:16,573 - #18 verify
INFO  13:32:16,573 - #6 (
INFO  13:32:16,573 - #7 )
INFO  13:32:16,574 - #3 {
INFO  13:32:16,574 - #9 print
INFO  13:32:16,574 - #6 (
INFO  13:32:16,574 - #19 v
INFO  13:32:16,574 - #7 )
INFO  13:32:16,575 - #5 ;
INFO  13:32:16,575 - #10 return
INFO  13:32:16,577 - #20 false
INFO  13:32:16,577 - #5 ;
INFO  13:32:16,577 - #4 }
INFO  13:32:16,577 - #13 void
INFO  13:32:16,577 - #18 main
INFO  13:32:16,577 - #6 (
INFO  13:32:16,578 - #7 )
INFO  13:32:16,578 - #3 {
INFO  13:32:16,578 - #14 if
INFO  13:32:16,578 - #6 (
INFO  13:32:16,578 - #17 1
INFO  13:32:16,578 - #39 !=
INFO  13:32:16,578 - #17 1
INFO  13:32:16,578 - #7 )
INFO  13:32:16,579 - #9 print
INFO  13:32:16,579 - #6 (
INFO  13:32:16,579 - #36 -
INFO  13:32:16,579 - #17 6
INFO  13:32:16,579 - #7 )
INFO  13:32:16,579 - #5 ;
INFO  13:32:16,580 - #15 else
INFO  13:32:16,580 - #9 print
INFO  13:32:16,580 - #6 (
INFO  13:32:16,580 - #17 0
INFO  13:32:16,580 - #7 )
INFO  13:32:16,580 - #5 ;
INFO  13:32:16,580 - #18 ibool
INFO  13:32:16,580 - #12 =
INFO  13:32:16,580 - #20 false
INFO  13:32:16,580 - #5 ;
INFO  13:32:16,580 - #18 i
INFO  13:32:16,581 - #12 =
INFO  13:32:16,581 - #17 0
INFO  13:32:16,581 - #5 ;
INFO  13:32:16,581 - #25 while
INFO  13:32:16,581 - #6 (
INFO  13:32:16,581 - #18 i
INFO  13:32:16,581 - #42 <
INFO  13:32:16,581 - #17 5
INFO  13:32:16,583 - #7 )
INFO  13:32:16,583 - #3 {
INFO  13:32:16,583 - #14 if
INFO  13:32:16,583 - #6 (
INFO  13:32:16,583 - #18 i
INFO  13:32:16,583 - #38 ==
INFO  13:32:16,583 - #17 2
INFO  13:32:16,583 - #7 )
INFO  13:32:16,583 - #18 ibool
INFO  13:32:16,583 - #12 =
INFO  13:32:16,583 - #20 true
INFO  13:32:16,584 - #5 ;
INFO  13:32:16,584 - #18 i
INFO  13:32:16,584 - #32 ++
INFO  13:32:16,584 - #5 ;
INFO  13:32:16,584 - #4 }
INFO  13:32:16,584 - #14 if
INFO  13:32:16,584 - #6 (
INFO  13:32:16,584 - #18 ibool
INFO  13:32:16,584 - #7 )
INFO  13:32:16,585 - #14 if
INFO  13:32:16,585 - #6 (
INFO  13:32:16,585 - #18 i
INFO  13:32:16,585 - #38 ==
INFO  13:32:16,585 - #17 5
INFO  13:32:16,585 - #7 )
INFO  13:32:16,585 - #9 print
INFO  13:32:16,585 - #6 (
INFO  13:32:16,585 - #17 1
INFO  13:32:16,585 - #7 )
INFO  13:32:16,585 - #5 ;
INFO  13:32:16,585 - #15 else
INFO  13:32:16,585 - #9 print
INFO  13:32:16,585 - #6 (
INFO  13:32:16,585 - #36 -
INFO  13:32:16,585 - #17 1
INFO  13:32:16,585 - #7 )
INFO  13:32:16,585 - #5 ;
INFO  13:32:16,585 - #18 a
INFO  13:32:16,586 - #12 =
INFO  13:32:16,586 - #17 2
INFO  13:32:16,586 - #5 ;
INFO  13:32:16,586 - #18 niz
INFO  13:32:16,586 - #12 =
INFO  13:32:16,586 - #37 new
INFO  13:32:16,586 - #18 int
INFO  13:32:16,586 - #23 [
INFO  13:32:16,586 - #17 3
INFO  13:32:16,586 - #24 ]
INFO  13:32:16,586 - #5 ;
INFO  13:32:16,586 - #18 niz
INFO  13:32:16,586 - #23 [
INFO  13:32:16,586 - #17 0
INFO  13:32:16,586 - #24 ]
INFO  13:32:16,586 - #12 =
INFO  13:32:16,586 - #17 1
INFO  13:32:16,586 - #44 *
INFO  13:32:16,586 - #18 a
INFO  13:32:16,587 - #5 ;
INFO  13:32:16,587 - #18 niz
INFO  13:32:16,587 - #23 [
INFO  13:32:16,587 - #17 1
INFO  13:32:16,587 - #24 ]
INFO  13:32:16,587 - #12 =
INFO  13:32:16,587 - #17 2
INFO  13:32:16,587 - #44 *
INFO  13:32:16,587 - #18 a
INFO  13:32:16,587 - #5 ;
INFO  13:32:16,588 - #18 niz
INFO  13:32:16,588 - #23 [
INFO  13:32:16,588 - #17 2
INFO  13:32:16,588 - #24 ]
INFO  13:32:16,588 - #12 =
INFO  13:32:16,588 - #18 sum
INFO  13:32:16,588 - #6 (
INFO  13:32:16,588 - #18 niz
INFO  13:32:16,588 - #23 [
INFO  13:32:16,588 - #17 1
INFO  13:32:16,588 - #24 ]
INFO  13:32:16,588 - #8 ,
INFO  13:32:16,588 - #18 niz
INFO  13:32:16,588 - #23 [
INFO  13:32:16,588 - #17 0
INFO  13:32:16,588 - #24 ]
INFO  13:32:16,588 - #7 )
INFO  13:32:16,588 - #44 *
INFO  13:32:16,588 - #18 a
INFO  13:32:16,588 - #11 +
INFO  13:32:16,588 - #17 1
INFO  13:32:16,588 - #5 ;
INFO  13:32:16,588 - #14 if
INFO  13:32:16,588 - #6 (
INFO  13:32:16,588 - #18 verify
INFO  13:32:16,588 - #6 (
INFO  13:32:16,589 - #7 )
INFO  13:32:16,589 - #34 ||
INFO  13:32:16,589 - #18 niz
INFO  13:32:16,589 - #23 [
INFO  13:32:16,589 - #17 2
INFO  13:32:16,589 - #24 ]
INFO  13:32:16,589 - #38 ==
INFO  13:32:16,589 - #17 4
INFO  13:32:16,589 - #7 )
INFO  13:32:16,589 - #9 print
INFO  13:32:16,589 - #6 (
INFO  13:32:16,590 - #18 ord
INFO  13:32:16,590 - #6 (
INFO  13:32:16,590 - #19 A
INFO  13:32:16,590 - #7 )
INFO  13:32:16,590 - #7 )
INFO  13:32:16,590 - #5 ;
INFO  13:32:16,590 - #15 else
INFO  13:32:16,590 - #9 print
INFO  13:32:16,590 - #6 (
INFO  13:32:16,590 - #18 ord
INFO  13:32:16,590 - #6 (
INFO  13:32:16,590 - #19 a
INFO  13:32:16,591 - #7 )
INFO  13:32:16,591 - #7 )
INFO  13:32:16,591 - #5 ;
INFO  13:32:16,591 - #9 print
INFO  13:32:16,591 - #6 (
INFO  13:32:16,591 - #18 eol
INFO  13:32:16,591 - #7 )
INFO  13:32:16,591 - #5 ;
INFO  13:32:16,591 - #18 i
INFO  13:32:16,591 - #12 =
INFO  13:32:16,591 - #17 0
INFO  13:32:16,591 - #5 ;
INFO  13:32:16,592 - #25 while
INFO  13:32:16,592 - #6 (
INFO  13:32:16,592 - #18 i
INFO  13:32:16,592 - #42 <
INFO  13:32:16,592 - #17 10
INFO  13:32:16,592 - #7 )
INFO  13:32:16,592 - #3 {
INFO  13:32:16,592 - #14 if
INFO  13:32:16,592 - #6 (
INFO  13:32:16,592 - #18 i
INFO  13:32:16,592 - #38 ==
INFO  13:32:16,592 - #17 3
INFO  13:32:16,592 - #7 )
INFO  13:32:16,592 - #3 {
INFO  13:32:16,592 - #18 i
INFO  13:32:16,592 - #32 ++
INFO  13:32:16,592 - #5 ;
INFO  13:32:16,592 - #27 continue
INFO  13:32:16,592 - #5 ;
INFO  13:32:16,592 - #4 }
INFO  13:32:16,593 - #14 if
INFO  13:32:16,593 - #6 (
INFO  13:32:16,593 - #18 i
INFO  13:32:16,593 - #38 ==
INFO  13:32:16,593 - #17 4
INFO  13:32:16,593 - #7 )
INFO  13:32:16,593 - #26 break
INFO  13:32:16,593 - #5 ;
INFO  13:32:16,593 - #18 i
INFO  13:32:16,593 - #12 =
INFO  13:32:16,593 - #18 inkrement
INFO  13:32:16,593 - #6 (
INFO  13:32:16,593 - #18 i
INFO  13:32:16,594 - #8 ,
INFO  13:32:16,594 - #17 1
INFO  13:32:16,594 - #7 )
INFO  13:32:16,594 - #5 ;
INFO  13:32:16,594 - #4 }
INFO  13:32:16,594 - #14 if
INFO  13:32:16,594 - #6 (
INFO  13:32:16,594 - #18 i
INFO  13:32:16,594 - #38 ==
INFO  13:32:16,594 - #17 3
INFO  13:32:16,594 - #35 &&
INFO  13:32:16,594 - #18 verify
INFO  13:32:16,594 - #6 (
INFO  13:32:16,594 - #7 )
INFO  13:32:16,594 - #7 )
INFO  13:32:16,594 - #9 print
INFO  13:32:16,594 - #6 (
INFO  13:32:16,594 - #36 -
INFO  13:32:16,594 - #17 4
INFO  13:32:16,594 - #7 )
INFO  13:32:16,594 - #5 ;
INFO  13:32:16,594 - #15 else
INFO  13:32:16,594 - #9 print
INFO  13:32:16,594 - #6 (
INFO  13:32:16,594 - #17 4
INFO  13:32:16,594 - #7 )
INFO  13:32:16,595 - #5 ;
INFO  13:32:16,595 - #28 read
INFO  13:32:16,595 - #6 (
INFO  13:32:16,595 - #18 niz
INFO  13:32:16,595 - #23 [
INFO  13:32:16,595 - #17 0
INFO  13:32:16,595 - #24 ]
INFO  13:32:16,595 - #7 )
INFO  13:32:16,595 - #5 ;
INFO  13:32:16,595 - #28 read
INFO  13:32:16,595 - #6 (
INFO  13:32:16,595 - #18 niz
INFO  13:32:16,595 - #23 [
INFO  13:32:16,595 - #17 1
INFO  13:32:16,595 - #24 ]
INFO  13:32:16,595 - #7 )
INFO  13:32:16,595 - #5 ;
INFO  13:32:16,596 - #28 read
INFO  13:32:16,596 - #6 (
INFO  13:32:16,596 - #18 niz
INFO  13:32:16,596 - #23 [
INFO  13:32:16,596 - #17 2
INFO  13:32:16,596 - #24 ]
INFO  13:32:16,596 - #7 )
INFO  13:32:16,596 - #5 ;
INFO  13:32:16,596 - #9 print
INFO  13:32:16,596 - #6 (
INFO  13:32:16,596 - #18 eol
INFO  13:32:16,596 - #7 )
INFO  13:32:16,596 - #5 ;
INFO  13:32:16,596 - #9 print
INFO  13:32:16,596 - #6 (
INFO  13:32:16,596 - #18 sum
INFO  13:32:16,596 - #6 (
INFO  13:32:16,596 - #18 sum
INFO  13:32:16,596 - #6 (
INFO  13:32:16,596 - #18 niz
INFO  13:32:16,596 - #23 [
INFO  13:32:16,596 - #17 0
INFO  13:32:16,596 - #24 ]
INFO  13:32:16,596 - #8 ,
INFO  13:32:16,596 - #18 niz
INFO  13:32:16,596 - #23 [
INFO  13:32:16,596 - #17 1
INFO  13:32:16,596 - #24 ]
INFO  13:32:16,596 - #7 )
INFO  13:32:16,596 - #8 ,
INFO  13:32:16,596 - #18 niz
INFO  13:32:16,596 - #23 [
INFO  13:32:16,596 - #17 2
INFO  13:32:16,596 - #24 ]
INFO  13:32:16,596 - #7 )
INFO  13:32:16,596 - #7 )
INFO  13:32:16,596 - #5 ;
INFO  13:32:16,596 - #9 print
INFO  13:32:16,596 - #6 (
INFO  13:32:16,597 - #18 eol
INFO  13:32:16,597 - #7 )
INFO  13:32:16,597 - #5 ;
INFO  13:32:16,597 - #9 print
INFO  13:32:16,597 - #6 (
INFO  13:32:16,597 - #18 inkrement
INFO  13:32:16,597 - #6 (
INFO  13:32:16,597 - #18 niz
INFO  13:32:16,597 - #23 [
INFO  13:32:16,597 - #17 2
INFO  13:32:16,597 - #24 ]
INFO  13:32:16,597 - #8 ,
INFO  13:32:16,597 - #17 2
INFO  13:32:16,597 - #7 )
INFO  13:32:16,597 - #7 )
INFO  13:32:16,597 - #5 ;
INFO  13:32:16,597 - #18 a
INFO  13:32:16,597 - #12 =
INFO  13:32:16,597 - #17 3
INFO  13:32:16,597 - #5 ;
INFO  13:32:16,597 - #18 i
INFO  13:32:16,597 - #12 =
INFO  13:32:16,597 - #17 0
INFO  13:32:16,597 - #5 ;
INFO  13:32:16,597 - #25 while
INFO  13:32:16,597 - #6 (
INFO  13:32:16,597 - #18 i
INFO  13:32:16,597 - #42 <
INFO  13:32:16,597 - #17 3
INFO  13:32:16,597 - #7 )
INFO  13:32:16,598 - #3 {
INFO  13:32:16,598 - #18 niz
INFO  13:32:16,598 - #23 [
INFO  13:32:16,598 - #18 i
INFO  13:32:16,599 - #24 ]
INFO  13:32:16,599 - #12 =
INFO  13:32:16,599 - #18 niz
INFO  13:32:16,599 - #23 [
INFO  13:32:16,599 - #18 i
INFO  13:32:16,599 - #24 ]
INFO  13:32:16,599 - #44 *
INFO  13:32:16,599 - #17 2
INFO  13:32:16,599 - #44 *
INFO  13:32:16,599 - #18 a
INFO  13:32:16,599 - #5 ;
INFO  13:32:16,599 - #18 i
INFO  13:32:16,599 - #32 ++
INFO  13:32:16,599 - #5 ;
INFO  13:32:16,599 - #4 }
INFO  13:32:16,599 - #18 niz
INFO  13:32:16,599 - #30 .
INFO  13:32:16,599 - #29 foreach
INFO  13:32:16,599 - #6 (
INFO  13:32:16,599 - #18 curr
INFO  13:32:16,599 - #31 =>
INFO  13:32:16,599 - #9 print
INFO  13:32:16,600 - #6 (
INFO  13:32:16,600 - #18 curr
INFO  13:32:16,600 - #44 *
INFO  13:32:16,600 - #17 3
INFO  13:32:16,600 - #7 )
INFO  13:32:16,600 - #5 ;
INFO  13:32:16,600 - #7 )
INFO  13:32:16,600 - #5 ;
INFO  13:32:16,600 - #18 i
INFO  13:32:16,600 - #12 =
INFO  13:32:16,600 - #17 0
INFO  13:32:16,600 - #5 ;
INFO  13:32:16,600 - #25 while
INFO  13:32:16,600 - #6 (
INFO  13:32:16,600 - #18 i
INFO  13:32:16,600 - #42 <
INFO  13:32:16,600 - #17 3
INFO  13:32:16,600 - #7 )
INFO  13:32:16,600 - #3 {
INFO  13:32:16,600 - #9 print
INFO  13:32:16,601 - #6 (
INFO  13:32:16,601 - #18 niz2
INFO  13:32:16,601 - #23 [
INFO  13:32:16,601 - #18 i
INFO  13:32:16,601 - #24 ]
INFO  13:32:16,601 - #7 )
INFO  13:32:16,601 - #5 ;
INFO  13:32:16,601 - #18 i
INFO  13:32:16,601 - #32 ++
INFO  13:32:16,601 - #5 ;
INFO  13:32:16,601 - #4 }
INFO  13:32:16,601 - #4 }
INFO  13:32:16,601 - #4 }
ERROR 13:32:16,614 - Tip izraza u return naredbi ne slaze se sa tipom povratne vrednosti funkcije inkrement na liniji 2
ERROR 13:32:16,615 - Nekompatibilni tipovi u izrazu za mulop. na liniji 57
ERROR 13:32:16,615 - Nekompatibilni tipovi u izrazu za addop. na liniji 9
ERROR 13:32:16,615 - Designator i dodeljen izraz nisu kompatibilni za dodelu.  na liniji 57
ERROR 13:32:16,615 - Izraz nije boolean tipa. na liniji 4
ERROR 13:32:16,615 - Izraz nije odgovarajuceg tipa (int, char, bool)  na liniji 35
ERROR 13:32:16,615 - Izraz nije odgovarajuceg tipa (int, char, bool)  na liniji 12
ERROR 13:32:16,615 - Nesipravno koriscenje break-a, ne nalazite se u while/foreach pelji.
ERROR 13:32:16,615 - Designator i dodeljen izraz nisu kompatibilni za dodelu.  na liniji 70
ERROR 13:32:16,615 - Izraz nije boolean tipa. na liniji 12
ERROR 13:32:16,615 - Izraz nije odgovarajuceg tipa (int, char, bool)  na liniji 7
ERROR 13:32:16,615 - Izraz nije odgovarajuceg tipa (int, char, bool)  na liniji 7
ERROR 13:32:16,615 - Designator ne predstavlja niz! na liniji 92
ERROR 13:32:16,615 - Parsiranje NIJE uspesno zavrseno!
