INFO  13:32:30,913 - Compiling source file: D:\Desktop\PP1\Projekat\projekat\workspace\MJCompiler\test\test302.mj
INFO  13:32:30,950 - #2 program
INFO  13:32:30,950 - #18 test302
INFO  13:32:30,950 - #16 const
INFO  13:32:30,951 - #18 int
INFO  13:32:30,951 - #18 jedan
INFO  13:32:30,952 - #12 =
INFO  13:32:30,952 - #17 1
INFO  13:32:30,952 - #5 ;
INFO  13:32:30,953 - #18 int
INFO  13:32:30,953 - #18 i
INFO  13:32:30,953 - #5 ;
INFO  13:32:30,955 - #18 bool
INFO  13:32:30,955 - #18 ibool
INFO  13:32:30,955 - #5 ;
INFO  13:32:30,955 - #18 int
INFO  13:32:30,956 - #18 niz2
INFO  13:32:30,956 - #23 [
INFO  13:32:30,956 - #24 ]
INFO  13:32:30,956 - #5 ;
INFO  13:32:30,956 - #18 int
INFO  13:32:30,956 - #18 niz
INFO  13:32:30,957 - #23 [
INFO  13:32:30,957 - #24 ]
INFO  13:32:30,957 - #5 ;
INFO  13:32:30,957 - #18 int
INFO  13:32:30,957 - #18 a
INFO  13:32:30,957 - #8 ,
INFO  13:32:30,957 - #18 curr
INFO  13:32:30,957 - #5 ;
INFO  13:32:30,957 - #3 {
INFO  13:32:30,957 - #18 int
INFO  13:32:30,958 - #18 sum
INFO  13:32:30,958 - #6 (
INFO  13:32:30,958 - #18 int
INFO  13:32:30,958 - #18 z
INFO  13:32:30,958 - #8 ,
INFO  13:32:30,959 - #18 int
INFO  13:32:30,959 - #18 d
INFO  13:32:30,959 - #7 )
INFO  13:32:30,960 - #3 {
INFO  13:32:30,960 - #10 return
INFO  13:32:30,961 - #18 z
INFO  13:32:30,962 - #11 +
INFO  13:32:30,962 - #18 d
INFO  13:32:30,963 - #5 ;
INFO  13:32:30,963 - #4 }
INFO  13:32:30,963 - #18 int
INFO  13:32:30,964 - #18 inkrement
INFO  13:32:30,964 - #6 (
INFO  13:32:30,964 - #18 int
INFO  13:32:30,964 - #18 a
INFO  13:32:30,964 - #8 ,
INFO  13:32:30,964 - #18 int
INFO  13:32:30,964 - #18 inc
INFO  13:32:30,964 - #7 )
INFO  13:32:30,964 - #18 int
INFO  13:32:30,964 - #18 pom
INFO  13:32:30,964 - #5 ;
INFO  13:32:30,964 - #3 {
INFO  13:32:30,964 - #14 if
INFO  13:32:30,964 - #6 (
INFO  13:32:30,964 - #18 inc
INFO  13:32:30,964 - #38 ==
INFO  13:32:30,964 - #18 jedan
INFO  13:32:30,965 - #7 )
INFO  13:32:30,966 - #18 pom
INFO  13:32:30,966 - #12 =
INFO  13:32:30,966 - #17 1
INFO  13:32:30,966 - #5 ;
INFO  13:32:30,967 - #15 else
INFO  13:32:30,967 - #14 if
INFO  13:32:30,967 - #6 (
INFO  13:32:30,967 - #18 inc
INFO  13:32:30,967 - #38 ==
INFO  13:32:30,967 - #17 2
INFO  13:32:30,967 - #7 )
INFO  13:32:30,967 - #18 pom
INFO  13:32:30,967 - #12 =
INFO  13:32:30,967 - #18 a
INFO  13:32:30,967 - #5 ;
INFO  13:32:30,967 - #10 return
INFO  13:32:30,968 - #18 sum
INFO  13:32:30,968 - #6 (
INFO  13:32:30,968 - #18 a
INFO  13:32:30,968 - #8 ,
INFO  13:32:30,968 - #18 pom
INFO  13:32:30,968 - #7 )
INFO  13:32:30,968 - #5 ;
INFO  13:32:30,968 - #4 }
INFO  13:32:30,968 - #18 bool
INFO  13:32:30,968 - #18 verify
INFO  13:32:30,968 - #6 (
INFO  13:32:30,968 - #7 )
INFO  13:32:30,969 - #3 {
INFO  13:32:30,969 - #9 print
INFO  13:32:30,969 - #6 (
INFO  13:32:30,969 - #19 v
INFO  13:32:30,970 - #7 )
INFO  13:32:30,971 - #5 ;
INFO  13:32:30,971 - #10 return
INFO  13:32:30,973 - #20 false
INFO  13:32:30,973 - #5 ;
INFO  13:32:30,973 - #4 }
INFO  13:32:30,973 - #13 void
INFO  13:32:30,973 - #18 main
INFO  13:32:30,974 - #6 (
INFO  13:32:30,974 - #7 )
INFO  13:32:30,974 - #3 {
INFO  13:32:30,974 - #14 if
INFO  13:32:30,974 - #6 (
INFO  13:32:30,974 - #17 1
INFO  13:32:30,974 - #39 !=
INFO  13:32:30,974 - #17 1
INFO  13:32:30,975 - #7 )
INFO  13:32:30,975 - #9 print
INFO  13:32:30,975 - #6 (
INFO  13:32:30,975 - #36 -
INFO  13:32:30,975 - #17 6
INFO  13:32:30,975 - #7 )
INFO  13:32:30,975 - #5 ;
INFO  13:32:30,975 - #15 else
INFO  13:32:30,975 - #9 print
INFO  13:32:30,975 - #6 (
INFO  13:32:30,976 - #17 0
INFO  13:32:30,976 - #7 )
INFO  13:32:30,976 - #5 ;
INFO  13:32:30,976 - #18 ibool
INFO  13:32:30,976 - #12 =
INFO  13:32:30,976 - #20 false
INFO  13:32:30,976 - #5 ;
INFO  13:32:30,976 - #18 i
INFO  13:32:30,976 - #12 =
INFO  13:32:30,976 - #17 0
INFO  13:32:30,976 - #5 ;
INFO  13:32:30,976 - #25 while
INFO  13:32:30,976 - #6 (
INFO  13:32:30,976 - #18 i
INFO  13:32:30,977 - #42 <
INFO  13:32:30,977 - #17 5
INFO  13:32:30,978 - #7 )
INFO  13:32:30,978 - #3 {
INFO  13:32:30,978 - #14 if
INFO  13:32:30,978 - #6 (
INFO  13:32:30,978 - #18 i
INFO  13:32:30,978 - #38 ==
INFO  13:32:30,978 - #17 2
INFO  13:32:30,978 - #7 )
INFO  13:32:30,978 - #18 ibool
INFO  13:32:30,978 - #12 =
INFO  13:32:30,978 - #20 true
INFO  13:32:30,978 - #5 ;
INFO  13:32:30,979 - #18 i
INFO  13:32:30,979 - #32 ++
INFO  13:32:30,979 - #5 ;
INFO  13:32:30,979 - #4 }
INFO  13:32:30,979 - #14 if
INFO  13:32:30,979 - #6 (
INFO  13:32:30,980 - #18 ibool
INFO  13:32:30,980 - #7 )
INFO  13:32:30,980 - #14 if
INFO  13:32:30,980 - #6 (
INFO  13:32:30,980 - #18 i
INFO  13:32:30,980 - #38 ==
INFO  13:32:30,980 - #17 5
INFO  13:32:30,980 - #7 )
INFO  13:32:30,980 - #9 print
INFO  13:32:30,980 - #6 (
INFO  13:32:30,980 - #17 1
INFO  13:32:30,980 - #7 )
INFO  13:32:30,980 - #5 ;
INFO  13:32:30,980 - #15 else
INFO  13:32:30,980 - #9 print
INFO  13:32:30,980 - #6 (
INFO  13:32:30,981 - #36 -
INFO  13:32:30,981 - #17 1
INFO  13:32:30,981 - #7 )
INFO  13:32:30,981 - #5 ;
INFO  13:32:30,981 - #18 a
INFO  13:32:30,981 - #12 =
INFO  13:32:30,981 - #17 2
INFO  13:32:30,981 - #5 ;
INFO  13:32:30,981 - #18 niz
INFO  13:32:30,981 - #12 =
INFO  13:32:30,981 - #37 new
INFO  13:32:30,981 - #18 int
INFO  13:32:30,981 - #23 [
INFO  13:32:30,981 - #17 3
INFO  13:32:30,981 - #24 ]
INFO  13:32:30,981 - #5 ;
INFO  13:32:30,981 - #18 niz
INFO  13:32:30,981 - #23 [
INFO  13:32:30,981 - #17 0
INFO  13:32:30,982 - #24 ]
INFO  13:32:30,982 - #12 =
INFO  13:32:30,982 - #17 1
INFO  13:32:30,982 - #44 *
INFO  13:32:30,982 - #18 a
INFO  13:32:30,982 - #5 ;
INFO  13:32:30,983 - #18 niz
INFO  13:32:30,983 - #23 [
INFO  13:32:30,983 - #17 1
INFO  13:32:30,983 - #24 ]
INFO  13:32:30,983 - #12 =
INFO  13:32:30,983 - #17 2
INFO  13:32:30,983 - #44 *
INFO  13:32:30,983 - #18 a
INFO  13:32:30,983 - #5 ;
INFO  13:32:30,983 - #18 niz
INFO  13:32:30,983 - #23 [
INFO  13:32:30,983 - #17 2
INFO  13:32:30,983 - #24 ]
INFO  13:32:30,983 - #12 =
INFO  13:32:30,983 - #18 sum
INFO  13:32:30,983 - #6 (
INFO  13:32:30,983 - #18 niz
INFO  13:32:30,983 - #23 [
INFO  13:32:30,983 - #17 1
INFO  13:32:30,983 - #24 ]
INFO  13:32:30,983 - #8 ,
INFO  13:32:30,983 - #18 niz
INFO  13:32:30,983 - #23 [
INFO  13:32:30,983 - #17 0
INFO  13:32:30,983 - #24 ]
INFO  13:32:30,983 - #7 )
INFO  13:32:30,983 - #44 *
INFO  13:32:30,983 - #18 a
INFO  13:32:30,983 - #11 +
INFO  13:32:30,984 - #17 1
INFO  13:32:30,984 - #5 ;
INFO  13:32:30,984 - #14 if
INFO  13:32:30,984 - #6 (
INFO  13:32:30,984 - #18 verify
INFO  13:32:30,984 - #6 (
INFO  13:32:30,984 - #7 )
INFO  13:32:30,984 - #34 ||
INFO  13:32:30,984 - #18 niz
INFO  13:32:30,984 - #23 [
INFO  13:32:30,984 - #17 2
INFO  13:32:30,984 - #24 ]
INFO  13:32:30,984 - #38 ==
INFO  13:32:30,984 - #17 4
INFO  13:32:30,984 - #7 )
INFO  13:32:30,984 - #9 print
INFO  13:32:30,984 - #6 (
INFO  13:32:30,985 - #18 ord
INFO  13:32:30,985 - #6 (
INFO  13:32:30,985 - #19 A
INFO  13:32:30,985 - #7 )
INFO  13:32:30,985 - #7 )
INFO  13:32:30,985 - #5 ;
INFO  13:32:30,985 - #15 else
INFO  13:32:30,985 - #9 print
INFO  13:32:30,985 - #6 (
INFO  13:32:30,985 - #18 ord
INFO  13:32:30,985 - #6 (
INFO  13:32:30,985 - #19 a
INFO  13:32:30,985 - #7 )
INFO  13:32:30,985 - #7 )
INFO  13:32:30,985 - #5 ;
INFO  13:32:30,985 - #9 print
INFO  13:32:30,985 - #6 (
INFO  13:32:30,986 - #18 eol
INFO  13:32:30,986 - #7 )
INFO  13:32:30,986 - #5 ;
INFO  13:32:30,986 - #18 i
INFO  13:32:30,986 - #12 =
INFO  13:32:30,986 - #17 0
INFO  13:32:30,986 - #5 ;
INFO  13:32:30,986 - #25 while
INFO  13:32:30,986 - #6 (
INFO  13:32:30,986 - #18 i
INFO  13:32:30,986 - #42 <
INFO  13:32:30,986 - #17 10
INFO  13:32:30,986 - #7 )
INFO  13:32:30,986 - #3 {
INFO  13:32:30,986 - #14 if
INFO  13:32:30,986 - #6 (
INFO  13:32:30,986 - #18 i
INFO  13:32:30,986 - #38 ==
INFO  13:32:30,986 - #17 3
INFO  13:32:30,986 - #7 )
INFO  13:32:30,986 - #3 {
INFO  13:32:30,986 - #18 i
INFO  13:32:30,986 - #32 ++
INFO  13:32:30,987 - #5 ;
INFO  13:32:30,987 - #27 continue
INFO  13:32:30,987 - #5 ;
INFO  13:32:30,987 - #4 }
INFO  13:32:30,987 - #14 if
INFO  13:32:30,987 - #6 (
INFO  13:32:30,987 - #18 i
INFO  13:32:30,987 - #38 ==
INFO  13:32:30,987 - #17 4
INFO  13:32:30,987 - #7 )
INFO  13:32:30,987 - #26 break
INFO  13:32:30,987 - #5 ;
INFO  13:32:30,987 - #18 i
INFO  13:32:30,988 - #12 =
INFO  13:32:30,988 - #18 inkrement
INFO  13:32:30,988 - #6 (
INFO  13:32:30,988 - #18 i
INFO  13:32:30,988 - #8 ,
INFO  13:32:30,988 - #17 1
INFO  13:32:30,988 - #7 )
INFO  13:32:30,988 - #5 ;
INFO  13:32:30,988 - #4 }
INFO  13:32:30,988 - #14 if
INFO  13:32:30,988 - #6 (
INFO  13:32:30,988 - #18 i
INFO  13:32:30,988 - #38 ==
INFO  13:32:30,988 - #17 3
INFO  13:32:30,988 - #35 &&
INFO  13:32:30,988 - #18 verify
INFO  13:32:30,988 - #6 (
INFO  13:32:30,988 - #7 )
INFO  13:32:30,988 - #7 )
INFO  13:32:30,989 - #9 print
INFO  13:32:30,989 - #6 (
INFO  13:32:30,989 - #36 -
INFO  13:32:30,989 - #17 4
INFO  13:32:30,989 - #7 )
INFO  13:32:30,989 - #5 ;
INFO  13:32:30,989 - #15 else
INFO  13:32:30,989 - #9 print
INFO  13:32:30,989 - #6 (
INFO  13:32:30,989 - #17 4
INFO  13:32:30,989 - #7 )
INFO  13:32:30,989 - #5 ;
INFO  13:32:30,989 - #28 read
INFO  13:32:30,989 - #6 (
INFO  13:32:30,989 - #18 niz
INFO  13:32:30,989 - #23 [
INFO  13:32:30,989 - #17 0
INFO  13:32:30,989 - #24 ]
INFO  13:32:30,989 - #7 )
INFO  13:32:30,989 - #5 ;
INFO  13:32:30,989 - #28 read
INFO  13:32:30,989 - #6 (
INFO  13:32:30,989 - #18 niz
INFO  13:32:30,989 - #23 [
INFO  13:32:30,989 - #17 1
INFO  13:32:30,989 - #24 ]
INFO  13:32:30,989 - #7 )
INFO  13:32:30,989 - #5 ;
INFO  13:32:30,989 - #28 read
INFO  13:32:30,989 - #6 (
INFO  13:32:30,989 - #18 niz
INFO  13:32:30,989 - #23 [
INFO  13:32:30,989 - #17 2
INFO  13:32:30,990 - #24 ]
INFO  13:32:30,990 - #7 )
INFO  13:32:30,990 - #5 ;
INFO  13:32:30,990 - #9 print
INFO  13:32:30,990 - #6 (
INFO  13:32:30,990 - #18 eol
INFO  13:32:30,990 - #7 )
INFO  13:32:30,990 - #5 ;
INFO  13:32:30,990 - #9 print
INFO  13:32:30,990 - #6 (
INFO  13:32:30,990 - #18 sum
INFO  13:32:30,990 - #6 (
INFO  13:32:30,990 - #18 sum
INFO  13:32:30,990 - #6 (
INFO  13:32:30,990 - #18 niz
INFO  13:32:30,990 - #23 [
INFO  13:32:30,990 - #17 0
INFO  13:32:30,990 - #24 ]
INFO  13:32:30,990 - #8 ,
INFO  13:32:30,990 - #18 niz
INFO  13:32:30,990 - #23 [
INFO  13:32:30,991 - #17 1
INFO  13:32:30,991 - #24 ]
INFO  13:32:30,991 - #7 )
INFO  13:32:30,991 - #8 ,
INFO  13:32:30,991 - #18 niz
INFO  13:32:30,991 - #23 [
INFO  13:32:30,991 - #17 2
INFO  13:32:30,991 - #24 ]
INFO  13:32:30,991 - #7 )
INFO  13:32:30,991 - #7 )
INFO  13:32:30,991 - #5 ;
INFO  13:32:30,991 - #9 print
INFO  13:32:30,991 - #6 (
INFO  13:32:30,991 - #18 eol
INFO  13:32:30,991 - #7 )
INFO  13:32:30,991 - #5 ;
INFO  13:32:30,991 - #9 print
INFO  13:32:30,991 - #6 (
INFO  13:32:30,991 - #18 inkrement
INFO  13:32:30,992 - #6 (
INFO  13:32:30,992 - #18 niz
INFO  13:32:30,992 - #23 [
INFO  13:32:30,992 - #17 2
INFO  13:32:30,992 - #24 ]
INFO  13:32:30,992 - #8 ,
INFO  13:32:30,992 - #17 2
INFO  13:32:30,992 - #7 )
INFO  13:32:30,992 - #7 )
INFO  13:32:30,992 - #5 ;
INFO  13:32:30,992 - #18 a
INFO  13:32:30,992 - #12 =
INFO  13:32:30,992 - #17 3
INFO  13:32:30,992 - #5 ;
INFO  13:32:30,992 - #18 i
INFO  13:32:30,992 - #12 =
INFO  13:32:30,992 - #17 0
INFO  13:32:30,992 - #5 ;
INFO  13:32:30,992 - #25 while
INFO  13:32:30,992 - #6 (
INFO  13:32:30,992 - #18 i
INFO  13:32:30,992 - #42 <
INFO  13:32:30,992 - #17 3
INFO  13:32:30,992 - #7 )
INFO  13:32:30,993 - #3 {
INFO  13:32:30,993 - #18 niz
INFO  13:32:30,993 - #23 [
INFO  13:32:30,993 - #18 i
INFO  13:32:30,993 - #24 ]
INFO  13:32:30,993 - #12 =
INFO  13:32:30,993 - #18 niz
INFO  13:32:30,993 - #23 [
INFO  13:32:30,993 - #18 i
INFO  13:32:30,993 - #24 ]
INFO  13:32:30,993 - #44 *
INFO  13:32:30,993 - #17 2
INFO  13:32:30,993 - #44 *
INFO  13:32:30,993 - #18 a
INFO  13:32:30,993 - #5 ;
INFO  13:32:30,993 - #18 i
INFO  13:32:30,993 - #32 ++
INFO  13:32:30,993 - #5 ;
INFO  13:32:30,993 - #4 }
INFO  13:32:30,993 - #18 niz
INFO  13:32:30,993 - #30 .
INFO  13:32:30,993 - #29 foreach
INFO  13:32:30,993 - #6 (
INFO  13:32:30,993 - #18 curr
INFO  13:32:30,993 - #31 =>
INFO  13:32:30,993 - #9 print
INFO  13:32:30,994 - #6 (
INFO  13:32:30,994 - #18 curr
INFO  13:32:30,994 - #44 *
INFO  13:32:30,994 - #17 3
INFO  13:32:30,994 - #7 )
INFO  13:32:30,994 - #5 ;
INFO  13:32:30,994 - #7 )
INFO  13:32:30,994 - #5 ;
INFO  13:32:30,994 - #18 i
INFO  13:32:30,994 - #12 =
INFO  13:32:30,994 - #17 0
INFO  13:32:30,994 - #5 ;
INFO  13:32:30,994 - #25 while
INFO  13:32:30,995 - #6 (
INFO  13:32:30,995 - #18 i
INFO  13:32:30,995 - #42 <
INFO  13:32:30,995 - #17 3
INFO  13:32:30,995 - #7 )
INFO  13:32:30,995 - #3 {
INFO  13:32:30,995 - #9 print
INFO  13:32:30,995 - #6 (
INFO  13:32:30,995 - #18 niz2
INFO  13:32:30,995 - #23 [
INFO  13:32:30,995 - #18 i
INFO  13:32:30,995 - #24 ]
INFO  13:32:30,995 - #7 )
INFO  13:32:30,995 - #5 ;
INFO  13:32:30,995 - #18 i
INFO  13:32:30,995 - #32 ++
INFO  13:32:30,995 - #5 ;
INFO  13:32:30,995 - #4 }
INFO  13:32:30,995 - #4 }
INFO  13:32:30,995 - #4 }
ERROR 13:32:31,010 - Tip izraza u return naredbi ne slaze se sa tipom povratne vrednosti funkcije inkrement na liniji 2
ERROR 13:32:31,011 - Nekompatibilni tipovi u izrazu za mulop. na liniji 57
ERROR 13:32:31,011 - Nekompatibilni tipovi u izrazu za addop. na liniji 9
ERROR 13:32:31,011 - Designator i dodeljen izraz nisu kompatibilni za dodelu.  na liniji 57
ERROR 13:32:31,011 - Izraz nije boolean tipa. na liniji 4
ERROR 13:32:31,011 - Izraz nije odgovarajuceg tipa (int, char, bool)  na liniji 35
ERROR 13:32:31,011 - Izraz nije odgovarajuceg tipa (int, char, bool)  na liniji 12
ERROR 13:32:31,011 - Nesipravno koriscenje break-a, ne nalazite se u while/foreach pelji.
ERROR 13:32:31,011 - Designator i dodeljen izraz nisu kompatibilni za dodelu.  na liniji 70
ERROR 13:32:31,011 - Izraz nije boolean tipa. na liniji 12
ERROR 13:32:31,011 - Izraz nije odgovarajuceg tipa (int, char, bool)  na liniji 7
ERROR 13:32:31,011 - Izraz nije odgovarajuceg tipa (int, char, bool)  na liniji 7
ERROR 13:32:31,011 - Designator ne predstavlja niz! na liniji 92
ERROR 13:32:31,012 - Parsiranje NIJE uspesno zavrseno!
